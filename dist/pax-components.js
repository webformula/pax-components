/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/components/autocomplete/external.css":
/*!**************************************************!*\
  !*** ./src/components/autocomplete/external.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/autocomplete/external.css?");

/***/ }),

/***/ "./src/components/autocomplete/index.js":
/*!**********************************************!*\
  !*** ./src/components/autocomplete/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-autocomplete');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-autocomplete\", \n      class mdwAutocomplete extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this._hasFilter = this.hasAttribute('filter');\n  }\n    \n\n  connectedCallback() {\n    const target = this.targetInput;\n\n    this._innerHTML = this.innerHTML;\n    this._optionsData = [...this.children].reduce((a, el) => {\n      a[el.innerText] = el.getAttribute('value');\n      return a;\n    }, {});\n    this.innerHTML = '';\n    this.insertAdjacentHTML('beforeend', this.panelHTML);\n    this.panel.innerHTML = this._innerHTML;\n    this.panel.style.minWidth = `${this.targetInput.offsetWidth}px`;\n    this.panel.style.transform = 'scale(1)';\n    this.panel.style.top = `${this.targetInput.offsetHeight + 12}px`;\n    this.panel.ignoreElementOnClickToClose(target);\n\n    this.bound_onTargetFocus = this.onTargetFocus.bind(this);\n    this.bound_onTargetBlur = this.onTargetBlur.bind(this);\n    this.bound_onTargetChange = this.onTargetChange.bind(this);\n    this.bound_onTargetInput = this.onTargetInput.bind(this);\n    this.bound_onPanelClick = this.onPanelClick.bind(this);\n    this.bound_onPanelClose = this.onPanelClose.bind(this);\n    this.bound_onKeyDown = this.onKeyDown.bind(this);\n    this.debounce_filter = MDWUtils.debounce(this.filter.bind(this), 100);\n\n    target.addEventListener('focus', this.bound_onTargetFocus);\n    target.addEventListener('blur', this.bound_onTargetBlur);\n    target.addEventListener('input', this.bound_onTargetInput);\n    this.panel.addEventListener('MDWPanel:closed', this.bound_onPanelClose);\n    document.body.addEventListener('keydown', this.bound_onKeyDown);\n  }\n\n  disconnectedCallback() {\n    const target = this.targetInput;\n    if (target) {\n      target.removeEventListener('focus', this.bound_onTargetFocus);\n      target.removeEventListener('blur', this.bound_onTargetBlur);\n      target.removeEventListener('change', this.bound_onTargetChange);\n      target.removeEventListener('input', this.bound_onTargetInput);\n    }\n    this.panel.close();\n    this.panel.removeEventListener('click', this.bound_onPanelClick);\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n    document.body.removeEventListener('keydown', this.bound_onKeyDown);\n  }\n\n  get targetInput() {\n    return document.body.querySelector(`input[name=${this.getAttribute('for')}]`);\n  }\n\n  get panel() {\n    if (!this.panel_) this.panel_ = this.querySelector('mdw-panel');\n    return this.panel_;\n  }\n\n  get panelHTML() {\n    return '<mdw-panel mdw-position=\"top inner-left\"></mdw-panel>';\n  }\n\n  onPanelClose(e) {\n    const target = this.targetInput;\n    this.panel.removeEventListener('click', this.bound_onPanelClick);\n    target.removeEventListener('change', this.bound_onTargetChange);\n  }\n\n  openPanel() {\n    const target = this.targetInput;\n    this._focusIndex = undefined;\n    this.panel.open(true);\n    this.panel.addEventListener('click', this.bound_onPanelClick);\n    target.addEventListener('change', this.bound_onTargetChange);\n  }\n\n  onKeyDown(e) {\n    if (!this.panel.isOpen()) {\n      if (!this._isInputFocused) return;\n      if (e.keyCode !== 27) this.openPanel();\n      return;\n    }\n\n    switch (e.keyCode) {\n      case 40: //down\n      case 39: //right\n        this.focusNext();\n        break;\n\n      case 38: //up\n      case 37: //left\n        this.focusPrevious();\n        break;\n\n      case 13: //enter\n        this.selectFocused();\n        break;\n    }\n  }\n\n  onTargetFocus(e) {\n    this._isInputFocused = true;\n    this.openPanel();\n  }\n\n  onTargetBlur(e) {\n    this._isInputFocused = false;\n    // this.panel.close();\n    // this.panel.removeEventListener('click', this.bound_onPanelClick);\n  }\n\n  onTargetChange(e) {\n    // console.log('change');\n  }\n\n  onTargetInput(e) {\n    if (!this.panel.isOpen()) {\n      this.openPanel();\n      return;\n    }\n    if (this._hasFilter) this.debounce_filter(e.target.value);\n  }\n\n  onPanelClick(e) {\n    if (e.target.hasAttribute('value')) {\n      const value = e.target.getAttribute('value');\n      // TODO text field should do this when value is set\n      this.targetInput.parentNode.classList.add('not-empty');\n      this.targetInput.value = value;\n      this.panel.close();\n    }\n  }\n\n  filter(value) {\n    if (!this.panel.isOpen()) return;\n    value = value.toLowerCase();\n    const vlen = value.length;\n    const filtered = Object.keys(this._optionsData).filter(h => {\n      const hlen = h.length;\n      if (vlen > hlen) return false;\n      if (vlen === hlen) return value === h;\n      if (h.toLowerCase().includes(value)) return true\n      return false;\n      // TODO implement char matching\n      // let i = 0;\n      // let j;\n      // for (; i < vlen; i += 1) {\n      //\n      // }\n    });\n\n    this.panel.innerHTML = this.renderOptions(filtered);\n  }\n\n  renderOptions(optionKeys) {\n    return `${optionKeys.map(k => html`\n      <option value=\"${this._optionsData[k]}\">${k}</option>\n    `).join('\\n')}`;\n  }\n\n  focusNext() {\n    if (!this.panel.isOpen()) return;\n    const optionElements = [...this.panel.children];\n    if (this._focusIndex === undefined) this._focusIndex = 0;\n    else this._focusIndex += 1;\n    if (this._focusIndex > optionElements.length - 1) this._focusIndex = optionElements.length - 1;\n    if (this._focusedOption) this._focusedOption.classList.remove('mdw-focused');\n    this._focusedOption = optionElements[this._focusIndex];\n    this._focusedOption.classList.add('mdw-focused');\n  }\n\n  focusPrevious() {\n    if (!this.panel.isOpen()) return;\n    const optionElements = [...this.panel.children];\n    if (this._focusIndex === undefined) this._focusIndex = 0;\n    else this._focusIndex -= 1;\n    if (this._focusIndex <= 0) this._focusIndex = 0;\n    if (this._focusedOption) this._focusedOption.classList.remove('mdw-focused');\n    this._focusedOption = optionElements[this._focusIndex];\n    this._focusedOption.classList.add('mdw-focused');\n  }\n\n  selectFocused() {\n    if (!this.panel.isOpen()) return;\n    const optionElements = [...this.panel.children];\n    if (this._focusIndex == undefined || this._focusIndex > optionElements.length - 1) this._focusIndex = 0;\n    const value =  optionElements[this._focusIndex].getAttribute('value');\n    // TODO text field should do this when value is set\n    this.targetInput.parentNode.classList.add('not-empty');\n    this.targetInput.value = value;\n    this.panel.close();\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-autocomplete');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/autocomplete/index.js?");

/***/ }),

/***/ "./src/components/backdrop/external.css":
/*!**********************************************!*\
  !*** ./src/components/backdrop/external.css ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/backdrop/external.css?");

/***/ }),

/***/ "./src/components/backdrop/index.js":
/*!******************************************!*\
  !*** ./src/components/backdrop/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-backdrop');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-backdrop\", \n      class mdwBackdrop extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n  }\n    \n\n  connectedCallback() {\n    this.frontElement.classList.add('mdw-elevation-1');\n  }\n\n  get frontElement() {\n    if (!this.frontElement_) this.frontElement_ = this.querySelector('mdw-backdrop-front');\n    return this.frontElement_;\n  }\n\n  get backContentElement() {\n    if (!this.backContentElement_) this.backContentElement_ = this.querySelector('mdw-backdrop-back mdw-backdrop-content');\n    return this.backContentElement_;\n  }\n\n  get backContenHeight() {\n    const children = this.backContentElement.children;\n    const lastChild = children[children.length - 1];\n    const childBounds = lastChild.getBoundingClientRect();\n    return this.backContentElement.getBoundingClientRect().y + childBounds.y + childBounds.height;\n  }\n\n  get expanded() {\n    return this.expanded_;\n  }\n\n  toggle() {\n    console.log('toggle', this.expanded_);\n    if (this.expanded_ === true) this.contract();\n    else this.expand();\n  }\n\n  expand() {\n    this.frontElement.style.top = `${this.backContenHeight}px`;\n    this.expanded_ = true;\n  }\n\n  contract() {\n    this.frontElement.style.top = '56px';\n    this.expanded_ = false;\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-backdrop');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/backdrop/index.js?");

/***/ }),

/***/ "./src/components/banner/external.css":
/*!********************************************!*\
  !*** ./src/components/banner/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/banner/external.css?");

/***/ }),

/***/ "./src/components/banner/index.js":
/*!****************************************!*\
  !*** ./src/components/banner/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-banner');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-banner\", \n      class mdwBanner extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n  }\n    \n\n  connectedCallback() {\n    this.style.marginBottom = `-${this.clientHeight + 1}px`;\n  }\n\n  show() {\n    MDWBanner.add(this);\n  }\n\n  dismiss() {\n    MDWBanner.remove(this);\n  }\n\n  accept() {\n    MDWBanner.accept(this);\n  }\n\n  _show() {\n    this.classList.add('mdw-show');\n  }\n\n  _dissmiss() {\n    const self = this;\n    self.addEventListener(MDWUtils.transitionEventName, function handler() {\n      self.removeEventListener(MDWUtils.transitionEventName, handler);\n      self.remove();\n    });\n    this.classList.add('mdw-dismiss');\n    this.dispatchClose();\n  }\n\n  dispatchClose() {\n    this.dispatchEvent(new CustomEvent('close'));\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-banner');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/banner/index.js?");

/***/ }),

/***/ "./src/components/banner/service.js":
/*!******************************************!*\
  !*** ./src/components/banner/service.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWBanner = new class MDWBanner {\n  constructor() {\n    this.queue = [];\n  }\n\n  add(el, resolver) {\n    this.queue.push({el, resolver});\n    this.handleQueue();\n  }\n\n  remove(el) {\n    if (this.current && this.current.el === el) {\n      this.current.resolver(false);\n      el._dissmiss();\n    } else this.queue = this.queue.filter(e => e.el !== el);\n  }\n\n  accept(el) {\n    if (this.current && this.current.el === el) {\n      this.current.resolver(true);\n      el._dissmiss();\n    } else this.queue = this.queue.filter(e => e.el !== el);\n  }\n\n  handleQueue() {\n    if (this.queue.length === 0) return;\n\n    if (!this.current) {\n      this.current = this.queue.shift();\n      this.current.el._show();\n      this.current.el.addEventListener('close', () => {\n        this.current = undefined;\n        setTimeout(() => {\n          this.handleQueue();\n        }, 300);\n      });\n    }\n  }\n\n  create({ message, dismissLabel = \"dismiss\", acceptLabel = null, template, parent }) {\n    if (!message && !template) throw Error('Either `message` or `template` is required');\n    if (!template && !dismissLabel && !acceptLabel) throw Error('When not using a `template` you are required to provide either a `dismissLabel` or an `acceptLabel`');\n\n    const uid = MDWUtils.uid();\n    if (!template) template = this.template(message, dismissLabel, acceptLabel, uid);\n\n    // try to find the correct parent if not passed in\n    let parentElement = parent || document.querySelector('mdw-page > mdw-top-app-bar');\n    if (!parentElement) parentElement = document.querySelector('mdw-page');\n    if (!parentElement) parentElement = document.querySelector('body');\n\n    let bannerElement = undefined;\n    if (parentElement.nodeName === 'MDW-TOP-APP-BAR') {\n      parentElement.insertAdjacentHTML('afterend', template);\n      bannerElement = document.querySelector(`mdw-banner#${uid}`);\n    } else {\n      parentElement.insertAdjacentHTML('afterbegin', template);\n      bannerElement = document.querySelector(`mdw-banner#${uid}`);\n    }\n\n    let resolver;\n    const promise = new Promise(resolve => {\n      resolver = resolve;\n    });\n\n    // NOTE may need timeout\n    this.add(bannerElement, resolver);\n    return promise;\n  }\n\n  template(message, dismissLabel, acceptLabel, uid) {\n    return html`\n      <mdw-banner id=\"${uid}\">\n        <div>${message}</div>\n        <div>\n          ${dismissLabel ? `<mdw-button onclick=\"${uid}.dismiss()\">${dismissLabel}</mdw-button>` : ''}\n          ${acceptLabel ? `<mdw-button onclick=\"${uid}.accept()\">${acceptLabel}</mdw-button>` : ''}\n        </div>\n      </mdw-banner>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/components/banner/service.js?");

/***/ }),

/***/ "./src/components/body/external.css":
/*!******************************************!*\
  !*** ./src/components/body/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/body/external.css?");

/***/ }),

/***/ "./src/components/button/external.css":
/*!********************************************!*\
  !*** ./src/components/button/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/button/external.css?");

/***/ }),

/***/ "./src/components/button/index.js":
/*!****************************************!*\
  !*** ./src/components/button/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-button');\n    t.innerHTML=`\n    <style>\n      :host(.mdw-show-spinner) span.text {\n  opacity: 0;\n}\n\n/* --- Ripple --- */\n\n.mdw-ripple {\n  overflow: hidden;\n}\n\n.mdw-ripple.mdw-ripple-unbounded {\n  overflow: visible;\n}\n\n.mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-foreground--rgb), 0.16);\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n\n.mdw-button-ripple,\n.mdw-button-focus-overlay {\n  border-radius: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n}\n\n\n:host(.mdw-primary) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n:host(.mdw-primary.mdw-raised) .mdw-ripple-element,\n:host(.mdw-primary.mdw-unelevated) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-background--rgb), 0.16);\n}\n\n:host(.mdw-secondary) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.16);\n}\n\n:host(.mdw-secondary.mdw-raised) .mdw-ripple-element,\n:host(.mdw-secondary.mdw-unelevated) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-background--rgb), 0.16);\n}\n\n:host(.error) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.16);\n}\n\n:host(.error.mdw-raised) .mdw-ripple-element,\n:host(.error.mdw-unelevated) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-background--rgb), 0.16);\n}\n\n    </style>\n    <render-block>\n      \n      <span class=\"text\"><slot></slot></span>\n      <span class=\"mdw-spinner-container\"></span>\n      <div class=\"mdw-ripple mdw-button-ripple\"></div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-button\", \n      class mdwButton extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_asyncClick = this.asyncClick.bind(this);\n    this.cloneTemplate();\n    this.setupAsync();\n  }\n    \n\n  connectedCallback() {\n    this.ripple = new MDWRipple({\n      element: this.shadowRoot.querySelector('.mdw-ripple'),\n      triggerElement: this\n    });\n  }\n\n  disconnectedCallback() {\n    this.ripple.destroy();\n    this.removeEventListener('click', this.bound_asyncClick);\n  }\n\n  get spinnerContainer() {\n    if (!this._spinnerContainer) this._spinnerContainer = this.shadowRoot.querySelector('.mdw-spinner-container');\n    return this._spinnerContainer;\n  }\n\n  get pending() {\n    return this.pending_;\n  }\n\n  setupAsync() {\n    if (!this.hasAttribute('mdw-async')) return;\n    this.addEventListener('click', this.bound_asyncClick);\n  }\n\n  resolve() {\n    if (this.pending_ === false) return;\n    this.pending_ = false;\n    this.hideSpinner();\n  }\n\n  asyncClick(e) {\n    if (this.pending_ === true) return;\n    this.pending_ = true;\n    this.showSpinner();\n  }\n\n  showSpinner() {\n    this._showSpinner = true;\n    this.classList.add('mdw-show-spinner');\n    const isWhite = this.classList.contains('mdw-primary') || this.classList.contains('mdw-secondary') || this.classList.contains('mdw-error');\n    this.spinnerContainer.innerHTML = `<mdw-circular-progress mdw-mode=\"indeterminate\" mdw-diameter=\"24\" class=\"${isWhite ? 'mdw-white' : 'mdw-grey'}\" style=\"position: absolute; left: calc(50% - 12px); top: 6px;\"></mdw-circular-progress>`;\n  }\n\n  hideSpinner() {\n    this._showSpinner = false;\n    this.classList.remove('mdw-show-spinner');\n    this.spinnerContainer.innerHTML = '';\n  }\n\n  template() {\n    return html`\n      <span class=\"text\"><slot></slot></span>\n      <span class=\"mdw-spinner-container\"></span>\n      <div class=\"mdw-ripple mdw-button-ripple\"></div>\n    `;\n  }\n\n  cssFile() {\n    return 'src/components/button/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-button');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/button/index.js?");

/***/ }),

/***/ "./src/components/card/external.css":
/*!******************************************!*\
  !*** ./src/components/card/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/card/external.css?");

/***/ }),

/***/ "./src/components/card/index.js":
/*!**************************************!*\
  !*** ./src/components/card/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-card');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-card\", \n      class mdwCard extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n  }\n    \n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-card');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/card/index.js?");

/***/ }),

/***/ "./src/components/checkbox/external.css":
/*!**********************************************!*\
  !*** ./src/components/checkbox/external.css ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/checkbox/external.css?");

/***/ }),

/***/ "./src/components/checkbox/index.js":
/*!******************************************!*\
  !*** ./src/components/checkbox/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-checkbox');\n    t.innerHTML=`\n    <style>\n      \n/* --- background ---  */\n\n.mdw-background::before {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: scale(0, 0);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),\n              transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  will-change: opacity, transform;\n}\n\n.mdw-background {\n  left: 11px;\n  right: initial;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: absolute;\n  top: 11px;\n  bottom: 0;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 45%;\n  height: 45%;\n  transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),\n              border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border: 2px solid currentColor;\n  border-radius: 2px;\n  background-color: transparent;\n  pointer-events: none;\n  will-change: background-color, border-color;\n}\n\n:host([dir=\"rtl\"]) .mdw-background {\n  left: initial;\n  right: 11px;\n}\n\n.mdw-checkmark {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0;\n  color: #fff;\n}\n\n.mdw-checkmark:after {\n  box-sizing: border-box;\n  -webkit-transform: rotate(45deg);\n  transform: rotate(45deg);\n  position: absolute;\n  left: 4px;\n  top: 0;\n  display: table;\n  width: 6.66667px;\n  height: 13.33333px;\n  border-width: 2px;\n  border-style: solid;\n  border-top: 0;\n  border-left: 0;\n  content: \"\";\n}\n\ninput:indeterminate + .mdw-background .mdw-checkmark {\n  transform: rotate(45deg);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),\n              transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0;\n}\n\ninput:indeterminate + .mdw-background .mdw-mixedmark {\n  width: 100%;\n  height: 0;\n  transform: scaleX(0) rotate(0deg);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),\n              transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border-width: 1px;\n  border-style: solid;\n  opacity: 0;\n  border-color: #fff;\n}\n\n@media screen and (-ms-high-contrast: active) {\n  .mixedmark {\n    margin: 0 1px;\n  }\n}\n\npath {\n  transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  stroke: currentColor;\n  stroke-width: 3.12px;\n  stroke-dashoffset: 29.78334;\n  stroke-dasharray: 29.78334;\n}\n\n\n\n/* --- input --- */\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  opacity: 0;\n  cursor: inherit;\n}\n\ninput:enabled:not(:checked):not(:indeterminate) + .mdw-background {\n  border-color: rgba(0, 0, 0, 0.54);\n  background-color: transparent;\n}\n\ninput:disabled:not(:checked):not(:indeterminate) + .mdw-background {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n\ninput:disabled:checked + .mdw-background,\ninput:disabled:indeterminate + .mdw-background {\n  border-color: transparent;\n  background-color: rgba(0, 0, 0, 0.26);\n}\n\ninput:checked + .mdw-background,\ninput:indeterminate + .mdw-background {\n  transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),\n              background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n}\n\ninput:checked + .mdw-background path,\ninput:indeterminate + .mdw-background path {\n  stroke-dashoffset: 0;\n}\n\ninput:focus + .mdw-background::before {\n  transform: scale(2.75, 2.75);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1),\n              transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0.12;\n}\n\ninput:disabled {\n  cursor: default;\n  pointer-events: none;\n}\n\ninput:checked + .mdw-background .mdw-checkmark {\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),\n              transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 1;\n}\n\ninput:checked + .mdw-background .mdw-mixedmark {\n  transform: scaleX(1) rotate(-45deg);\n}\n\ninput:indeterminate + .mdw-background .mdw-checkmark {\n  transform: rotate(45deg);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),\n              transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0;\n}\n\ninput:indeterminate + .mdw-background .mdw-mixedmark {\n  transform: scaleX(1) rotate(0deg);\n  opacity: 1;\n}\n\ninput:enabled:checked ~ .mdw-background,\ninput:enabled:indeterminate ~ .mdw-background {\n  border-color: var(--mdw-theme-secondary);\n  background-color: var(--mdw-theme-secondary);\n}\n\n:host(.mdw-primary) input:enabled:checked ~ .mdw-background,\n:host(.mdw-primary) input:enabled:indeterminate ~ .mdw-background {\n  border-color: var(--mdw-theme-primary);\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-error) input:enabled:checked ~ .mdw-background,\n:host(.mdw-error) input:enabled:indeterminate ~ .mdw-background {\n  border-color: var(--mdw-theme-error);\n  background-color: var(--mdw-theme-error);\n}\n\n\n\n/* --- Ripple --- */\n\n.mdw-ripple {\n  overflow: hidden;\n}\n\n.mdw-ripple.mdw-ripple-unbounded {\n  overflow: visible;\n}\n\n.mdw-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.16);\n}\n\n.mdw-checkbox-ripple {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 50%;\n  z-index: 1;\n  pointer-events: none;\n}\n\n:host(.mdw-primary) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n:host(.mdw-error) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.16);\n}\n\n    </style>\n    <render-block>\n      \n       <input type=\"checkbox\">\n       <div class=\"mdw-background\">\n         <div class=\"mdw-checkmark\"></div>\n         <div class=\"mdw-mixedmark\"></div>\n       </div>\n       <div class=\"mdw-ripple mdw-checkbox-ripple\"></div>\n     \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-checkbox\", \n      class mdwCheckbox extends HTMLElement {\n        \n    \n   \n    constructor() {\n     super();\n     this.bound_handleChange = this.handleChange.bind(this);\n   }\n    \n\n   connectedCallback() {\n     this.cloneTemplate();\n\n     if (this.hasAttribute('indeterminate')) this.indeterminate = true;\n     if (this.hasAttribute('checked')) this.checked = true;\n\n     this.ripple = new MDWRipple({\n       element: this.shadowRoot.querySelector('.mdw-ripple'),\n       triggerElement: [this.input],\n       radius: 20,\n       centered: true\n     });\n\n     this.connected_ = true;\n     this.input.addEventListener('change', this.bound_handleChange);\n   }\n\n   disconnectedCallback() {\n     this.input.removeEventListener('change', this.bound_handleChange);\n     this.ripple.destroy();\n   }\n\n   static get observedAttributes() {\n     return ['checked', 'indeterminate', 'disabled'];\n   }\n\n   attributeChangedCallback(name, oldValue, newValue) {\n     if (!this.connected_) return;\n     this[name] = newValue;\n   }\n\n   get input() {\n     if (!this.input_) this.input_ = this.shadowRoot.querySelector('input');\n     return this.input_;\n   }\n\n   get checked() {\n     return this.input.checked;\n   }\n\n   set checked(value) {\n     if (value === '') value = true;\n     this.input.checked = value;\n     this.handleChange();\n   }\n\n   get indeterminate() {\n     return this.input.indeterminate;\n   }\n\n   set indeterminate(value) {\n     if (value === '') value = true;\n     this.input.indeterminate = value;\n   }\n\n   set disabled(value) {\n     value = !!value || value === '';\n     if (value) this.input.setAttribute('disabled', 'disabled');\n     else this.input.removeAttribute('disabled');\n   }\n\n   handleChange() {\n     this.dispatchEvent(new CustomEvent('change', this));\n   }\n\n   toggle() {\n     this.checked = !this.checked;\n   }\n\n   cssFile() {\n     return '/src/components/checkbox/internal.css'\n   }\n\n   template() {\n     return html`\n       <input type=\"checkbox\">\n       <div class=\"mdw-background\">\n         <div class=\"mdw-checkmark\"></div>\n         <div class=\"mdw-mixedmark\"></div>\n       </div>\n       <div class=\"mdw-ripple mdw-checkbox-ripple\"></div>\n     `;\n   }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-checkbox');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/checkbox/index.js?");

/***/ }),

/***/ "./src/components/circular-progress/index.js":
/*!***************************************************!*\
  !*** ./src/components/circular-progress/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-circular-progress');\n    t.innerHTML=`\n    <style>\n      :host {\n  display: block;\n  position: relative;\n}\n\nsvg {\n  position: absolute;\n  transform: rotate(-90deg);\n  top: 0;\n  left: 0;\n  transform-origin: center;\n  overflow: visible;\n}\n\ncircle {\n  fill: transparent;\n  transform-origin: center;\n  transition: stroke-dashoffset 225ms linear;\n  stroke: var(--mdw-theme-primary);\n}\n\n:host(.mdw-white) circle {\n  stroke: white;\n}\n\n:host(.mdw-grey) circle {\n  stroke: grey;\n}\n\n:host(.mdw-secondary) circle {\n  stroke: var(--mdw-theme-secondary);\n}\n\n:host(.mdw-error) circle {\n  stroke: var(--mdw-theme-error);\n}\n\n:host([mdw-mode='indeterminate']) {\n  animation: mat-progress-spinner-linear-rotate 2000ms linear infinite;\n}\n\n:host([mdw-mode='indeterminate']) circle {\n  transition-property: stroke;\n  animation-duration: 4000ms;\n  animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1);\n  animation-iteration-count: infinite;\n}\n\n@keyframes mat-progress-spinner-linear-rotate {\n  0%       { transform: rotate(0deg); }\n  100%     { transform: rotate(360deg); }\n}\n\n@keyframes mat-progress-spinner-stroke-rotate-100 {\n  0% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(0);\n  }\n  12.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(0);\n  }\n  12.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(72.5deg);\n  }\n  25% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(72.5deg);\n  }\n  25.0001% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(270deg);\n  }\n  37.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(270deg);\n  }\n  37.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(161.5deg);\n  }\n  50% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(161.5deg);\n  }\n  50.0001% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(180deg);\n  }\n  62.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(180deg);\n  }\n  62.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(251.5deg);\n  }\n  75% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(251.5deg);\n  }\n  75.0001% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(90deg);\n  }\n  87.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(90deg);\n  }\n  87.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(341.5deg);\n  }\n  100% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(341.5deg);\n  }\n}\n\n    </style>\n    <render-block>\n      \n      <svg style=\"width: undefinedpx; height: undefinedpx;\">\n        <circle\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"NaN\"\n          style=\"\n            animation-name: mat-progress-spinner-stroke-rotate-undefined;\n            stroke-dasharray: NaNpx;\n            stroke-width: NaN%;\n          \"\n          ></circle>\n      </svg>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-circular-progress\", \n      class mdwCircularProgress extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.insertedDiameters = [];\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    this.diameter = this.getAttribute('mdw-diameter') || 100;\n    this.render();\n    this.style.width = this.style.height = this.diameter + 'px';\n    if (this.value) this.value = this.value;\n  }\n\n  static get observedAttributes() {\n    return ['value'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n  }\n\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(value) {\n    this._diameter = parseInt((''+value).replace('px', ''));\n    if (!this.insertedDiameters[this._diameter]) {\n      this.insertedDiameters.push(this._diameter);\n      this.shadowRoot.querySelector('style').sheet.insertRule(this._getAnimationText(), 0);\n    }\n  }\n\n  get svg() {\n    if (!this._svg) this._svg = this.shadowRoot.querySelector('svg');\n    return this._svg;\n  }\n\n  get strokeWidth() {\n    return this._strokeWidth || this.diameter / 10;\n  }\n  set strikeWidth(value) {\n    this._strokeWidth = parseInt((''+value).replace('px', ''));\n  }\n\n  get value() {\n    return this.getAttribute('value');\n  }\n  set value(value) {\n    this._value = Math.max(0, Math.min(100, parseInt((''+value).replace('px', ''))));\n    if (this.diameter === undefined) return;\n    this.circle.style.strokeDashoffset = (this._strokeCircumference * (100 - this._value) / 100) + 'px';\n  }\n\n  get mode() {\n    return this.getAttribute('mdw-mode') === 'determinate' ? 'determinate' : 'indeterminate';\n  }\n\n  get circle() {\n    if (!this._circle) this._circle = this.shadowRoot.querySelector('circle');\n    return this._circle;\n  }\n\n  get _circleRadius() {\n    return (this.diameter - 10) / 2;\n  }\n\n  get _circleStrokeWidth() {\n    return this.strokeWidth / this.diameter * 100;\n  }\n\n  get _strokeCircumference() {\n    return 2 * Math.PI * this._circleRadius;\n  }\n\n  get INDETERMINATE_ANIMATION_TEMPLATE() {\n    return `\n     @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n        0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n        12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n        12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n        25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n        25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n        37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n        37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n        50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n        50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n        62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n        62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n        75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n        75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n        87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n        87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n        100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n      }\n    `;\n  }\n\n  _getAnimationText() {\n    return this.INDETERMINATE_ANIMATION_TEMPLATE\n      .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n      .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n      .replace(/DIAMETER/g, `${this.diameter}`);\n  }\n\n  template() {\n    return html`\n      <svg style=\"width: ${this.diameter}px; height: ${this.diameter}px;\">\n        <circle\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"${this._circleRadius}\"\n          style=\"\n            animation-name: mat-progress-spinner-stroke-rotate-${this.diameter};\n            stroke-dasharray: ${this._strokeCircumference}px;\n            stroke-width: ${this._circleStrokeWidth}%;\n          \"\n          ></circle>\n      </svg>\n    `;\n  }\n\n  cssFile() {\n    return '/src/components/circular-progress/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-circular-progress');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/circular-progress/index.js?");

/***/ }),

/***/ "./src/components/content/external.css":
/*!*********************************************!*\
  !*** ./src/components/content/external.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/content/external.css?");

/***/ }),

/***/ "./src/components/dialog/external.css":
/*!********************************************!*\
  !*** ./src/components/dialog/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/dialog/external.css?");

/***/ }),

/***/ "./src/components/dialog/index.js":
/*!****************************************!*\
  !*** ./src/components/dialog/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-dialog');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-dialog\", \n      class mdwDialog extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_onPanelClose = this.onPanelClose.bind(this);\n  }\n    \n\n  connectedCallback() {\n    if (!this.hasBckdrop) this.insertAdjacentHTML('afterbegin', '<div class=\"mdw-dialog-backdrop mdw-hide\"></div>');\n    this.hasBckdrop = true;\n    this.panel.clickOutsideClose = false;\n  }\n\n  disconnectedCallback() {\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n  }\n\n  get panel() {\n    return this.querySelector('mdw-panel');\n  }\n\n  get backdrop() {\n    return this.querySelector('.mdw-dialog-backdrop');\n  }\n\n  get position() {\n    return this.position_ || 'center center';\n  }\n\n  set position(value) {\n    this.position_ = value;\n  }\n\n  show() {\n    this.panel.open();\n    this.panel.addEventListener('MDWPanel:closed', this.bound_onPanelClose);\n    this.backdrop.classList.remove('mdw-hide');\n    this.classList.add('mdw-show');\n    this.panel.setPosition(this.position);\n    // TODO find a better way to handle positioning against body.\n    this.panel.setPositionStyle(document.body);\n  }\n\n  close(ok) {\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n    this.panel.close();\n    this.backdrop.classList.add('mdw-hide');\n    this.dispatchClose(ok);\n  }\n\n  hoistToBody() {\n    document.body.appendChild(this);\n    this.classList.add('mdw-dialog-backdrop-hoisted');\n    this.isHoisted_ = true;\n  }\n\n  onPanelClose() {\n    this.backdrop.classList.add('mdw-hide');\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n  }\n\n  dispatchClose(isOk = false) {\n    this.dispatchEvent(new CustomEvent('close', {\n      detail: {\n        ok: isOk\n      }\n    }));\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-dialog');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/dialog/index.js?");

/***/ }),

/***/ "./src/components/dialog/service.js":
/*!******************************************!*\
  !*** ./src/components/dialog/service.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWDialog = new class MDWDialog {\n  show({ title, message, okLabel, cancelLabel, position = 'center center' }) {\n    return new Promise(resolve => {\n      const id = this.uid();\n      const template = this.template({ id, title, message, okLabel, cancelLabel, position });\n\n      document.body.insertAdjacentHTML('beforeend', template);\n      const el = document.querySelector(`#${id}`);\n      const onclose = (e) => {\n        resolve(e.detail.ok);\n        el.removeEventListener('close', onclose);\n        el.remove();\n      };\n      el.addEventListener('close', onclose);\n      el.show();\n    });\n  }\n\n  uid() {\n    return `dialog_${parseInt(Math.random() * 99999)}`;\n  }\n\n  template({ id, title, message, okLabel, cancelLabel, position }) {\n    return html`\n      <mdw-dialog id=\"${id}\">\n        <mdw-panel mdw-position=\"${position}\">\n          <mdw-dialog-container>\n            ${!!title ? `<mdw-dialog-title>${title}</mdw-dialog-title>` : ''}\n            <mdw-dialog-content>${message}</mdw-dialog-content>\n            <mdw-dialog-actions>\n              ${!!cancelLabel ? `<mdw-button class=\"mdw-error\" onclick=\"${id}.close(false)\">${cancelLabel}</mdw-button>` : ''}\n              ${!!okLabel ? `<mdw-button onclick=\"${id}.close(true)\">${okLabel}</mdw-button>` : ''}\n            </mdw-dialog-actions>\n          </mdw-dialog-container>\n        </mdw-panel>\n      </mdw-dialog>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/components/dialog/service.js?");

/***/ }),

/***/ "./src/components/divider/external.css":
/*!*********************************************!*\
  !*** ./src/components/divider/external.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/divider/external.css?");

/***/ }),

/***/ "./src/components/drawer/external.css":
/*!********************************************!*\
  !*** ./src/components/drawer/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/drawer/external.css?");

/***/ }),

/***/ "./src/components/drawer/index.js":
/*!****************************************!*\
  !*** ./src/components/drawer/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-drawer');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-drawer\", \n      class mdwDrawer extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.isShowing = true;\n    this.isRightAligned = this.hasAttribute('right-aligned');\n  }\n    \n\n  get isLockedOpen() {\n    return this.classList.contains('mdw-locked-open');\n  }\n\n  lockOpen() {\n    this.classList.add('mdw-locked-open');\n  }\n\n  unlockOpen() {\n    this.classList.remove('mdw-locked-open');\n  }\n\n  hide() {\n    this.classList.add('mdw-closed');\n    if (this.isLockedOpen) {\n      this.classList.remove('mdw-locked-open');\n      this.wasLockedOpen = true;\n    }\n    this.isShowing = false;\n  }\n\n  show() {\n    this.classList.remove('mdw-closed');\n    if (this.wasLockedOpen) {\n      this.classList.add('mdw-locked-open');\n    }\n    this.isShowing = true;\n  }\n\n  toggle() {\n    if (!this.isShowing) this.show();\n    else this.hide();\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-drawer');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/drawer/index.js?");

/***/ }),

/***/ "./src/components/fab/external.css":
/*!*****************************************!*\
  !*** ./src/components/fab/external.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/fab/external.css?");

/***/ }),

/***/ "./src/components/fab/index.js":
/*!*************************************!*\
  !*** ./src/components/fab/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-fab');\n    t.innerHTML=`\n    <style>\n      :host(.mdw-show-spinner) span.text {\n  opacity: 0;\n}\n\n/* --- Ripple --- */\n\n.mdw-ripple {\n  overflow: hidden;\n}\n\n.mdw-ripple.mdw-ripple-unbounded {\n  overflow: visible;\n}\n\n.mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-foreground--rgb), 0.16);\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n\n.mdw-fab-ripple,\n.mdw-fab-focus-overlay {\n  border-radius: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n}\n\n\n:host(.mdw-primary) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-background--rgb), 0.16);\n}\n\n:host(.mdw-secondary) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-background--rgb), 0.16);\n}\n\n:host(.mdw-error) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-background--rgb), 0.16);\n}\n\n    </style>\n    <render-block>\n      \n      <span class=\"text\"><slot></slot></span>\n      <span class=\"mdw-spinner-container\"></span>\n      <div class=\"mdw-ripple mdw-fab-ripple\"></div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-fab\", \n      class mdwFab extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_asyncClick = this.asyncClick.bind(this);\n    this.cloneTemplate();\n    this.setupAsync();\n  }\n    \n\n  connectedCallback() {\n    this.ripple = new MDWRipple({\n      element: this.shadowRoot.querySelector('.mdw-ripple'),\n      triggerElement: this\n    });\n  }\n\n  disconnectedCallback() {\n    this.ripple.destroy();\n    this.removeEventListener('click', this.bound_asyncClick);\n\n  }\n\n  template() {\n    return html`\n      <span class=\"text\"><slot></slot></span>\n      <span class=\"mdw-spinner-container\"></span>\n      <div class=\"mdw-ripple mdw-fab-ripple\"></div>\n    `;\n  }\n\n  get dense() {\n    return this.hasAttribute('mdw-dense');\n  }\n\n  get spinnerContainer() {\n    if (!this._spinnerContainer) this._spinnerContainer = this.shadowRoot.querySelector('.mdw-spinner-container');\n    return this._spinnerContainer;\n  }\n\n  set disabled(value) {\n    if (!!value || value === '') this.setAttribute('disabled', 'disabled');\n    else this.removeAttribute('disabled');\n  }\n\n  get pending() {\n    return this.pending_;\n  }\n\n  setupAsync() {\n    if (!this.hasAttribute('mdw-async')) return;\n    this.addEventListener('click', this.bound_asyncClick);\n  }\n\n  resolve() {\n    if (this.pending_ === false) return;\n    this.pending_ = false;\n    this.hideSpinner();\n  }\n\n  asyncClick(e) {\n    if (this.pending_ === true) return;\n    this.pending_ = true;\n    this.showSpinner();\n  }\n\n  get spinnerStyle() {\n    if (this.dense) return 'position: absolute; left: calc(50% - 16px); top: 4px;';\n    return 'position: absolute; left: calc(50% - 16px); top: 12px;';\n  }\n\n  showSpinner() {\n    this._showSpinner = true;\n    this.classList.add('mdw-show-spinner');\n    const isWhite = this.classList.contains('mdw-primary') || this.classList.contains('mdw-secondary') || this.classList.contains('mdw-error');\n    this.spinnerContainer.innerHTML = `<mdw-circular-progress mode=\"indeterminate\" class=\"${isWhite ? 'white' : 'grey'}\" diameter=\"32\" style=\"${this.spinnerStyle}\"></mdw-circular-progress>`;\n  }\n\n  hideSpinner() {\n    this._showSpinner = false;\n    this.classList.remove('mdw-show-spinner');\n    this.spinnerContainer.innerHTML = '';\n  }\n\n  cssFile() {\n    return 'src/components/fab/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-fab');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/fab/index.js?");

/***/ }),

/***/ "./src/components/icon/external.css":
/*!******************************************!*\
  !*** ./src/components/icon/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/icon/external.css?");

/***/ }),

/***/ "./src/components/linear-progress/index.js":
/*!*************************************************!*\
  !*** ./src/components/linear-progress/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-linear-progress');\n    t.innerHTML=`\n    <style>\n      :host {\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 4px;\n  padding-top: 0;\n  margin-bottom: 0;\n  background-color: #e6e6e6;\n}\n\n.mdw-bar {\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 4px;\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-white) .mdw-bar {\n  background-color: white;\n}\n\n:host(.mdw-grey) .mdw-bar {\n  background-color: grey;\n}\n\n:host(.mdw-secondary) .mdw-bar {\n  background-color: var(--mdw-theme-secondary);\n}\n\n:host(.mdw-error) .mdw-bar {\n  background-color: var(--mdw-theme-error);\n}\n\n\n:host(.mdw-query) .mdw-bar {\n  transition: all 0.2s linear;\n  animation: query .8s infinite cubic-bezier(0.390, 0.575, 0.565, 1.000);\n}\n\n@keyframes query {\n  0% {\n    opacity: 1;\n    transform: translateX(35%) scale(.3, 1);\n  }\n  100% {\n    opacity: 0;\n    transform: translateX(-50%) scale(0, 1);\n  }\n}\n\n    </style>\n    <render-block>\n      \n      <div class=\"mdw-bar\"></div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-linear-progress\", \n      class mdwLinearProgress extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    if (this.percent === null) this.classList.add('mdw-query')\n  }\n\n  static get observedAttributes() {\n    return ['mdw-percent'];\n  }\n\n  attributeChangedCallback(name, _oldValue, newValue) {\n    switch(name) {\n      case 'mdw-percent':\n        this.percent = newValue;\n        break;\n    }\n  }\n\n  get bar() {\n    if (!this._bar) this._bar = this.shadowRoot.querySelector('.mdw-bar');\n    return this._bar;\n  }\n\n  get percent() {\n    return this.getAttribute('mdw-percent');\n  }\n\n  set percent(value) {\n    if (value < 0) value = 0;\n    if (value > 100) value = 100;\n    this.bar.style.width = `${value}%`;\n  }\n\n  template() {\n    return html`\n      <div class=\"mdw-bar\"></div>\n    `;\n  }\n\n  cssFile() {\n    return '/src/components/linear-progress/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-linear-progress');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/linear-progress/index.js?");

/***/ }),

/***/ "./src/components/list-item/external.css":
/*!***********************************************!*\
  !*** ./src/components/list-item/external.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/list-item/external.css?");

/***/ }),

/***/ "./src/components/list-item/index.js":
/*!*******************************************!*\
  !*** ./src/components/list-item/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-list-item');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-list-item\", \n      class mdwListItem extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_hrefClick = this.hrefClick.bind(this);\n    this.bound_onSelect = this.onSelect.bind(this);\n    this.bound_onclickSelect = this.onclickSelect.bind(this);\n  }\n    \n\n  get list() {\n    return this.parentNode;\n  }\n\n  isSelect() {\n    return !!this.list.selectType;\n  }\n\n  selectOnclick() {\n    return !!this.list.selectOnclick;\n  }\n\n  connectedCallback() {\n    this.connectRipple();\n    this.connectHREF();\n    this.connectSelect();\n  }\n\n  disconnectedCallback() {\n    if (this.ripple) this.ripple.destroy();\n    this.removeEventListener('click', this.bound_hrefClick);\n    if (this.selectEl_) this.selectEl_.removeEventListener('change', this.bound_onSelect);\n    this.removeEventListener('click', this.bound_onclickSelect);\n  }\n\n  connectRipple() {\n    const element = this.querySelector('.mdw-ripple');\n    if (!element) return;\n    this.ripple = new MDWRipple({\n      element,\n      triggerElement: this\n    });\n    this.classList.add('mdw-has-ripple');\n  }\n\n  connectHREF() {\n    if (!this.hasAttribute('href')) return;\n    this.addEventListener('click', this.bound_hrefClick);\n  }\n\n  hrefClick() {\n    document.location.href = this.getAttribute('href');\n  }\n\n  onSelect(e) {\n    if (e.target.checked) this.list.itemSelected(this);\n    else this.list.itemDeselected(this);\n  }\n\n  onclickSelect(e) {\n    if (!this.selectOnclick()) return;\n    if (e.target === this.selectEl_) return;\n    this.selectEl_.checked = !this.selectEl_.checked;\n  }\n\n  connectSelect() {\n    if (this.isSelect()) {\n      this.selectEl_ = this.querySelector('mdw-checkbox');\n      if (this.selectEl_) this.selectEl_.addEventListener('change', this.bound_onSelect);\n      if (this.selectOnclick()) this.addEventListener('click', this.bound_onclickSelect);\n    }\n  }\n\n  deselect() {\n    this.selectEl_.checked = false;\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-list-item');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/list-item/index.js?");

/***/ }),

/***/ "./src/components/list/external.css":
/*!******************************************!*\
  !*** ./src/components/list/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/list/external.css?");

/***/ }),

/***/ "./src/components/list/index.js":
/*!**************************************!*\
  !*** ./src/components/list/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-list');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-list\", \n      class mdwList extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.selectedIndexes_ = [];\n  }\n    \n\n  static get observedAttributes() {\n    return ['mdw-select', 'mdw-select-onclick'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case 'mdw-select':\n        this.selectType = newValue;\n        break;\n      case 'mdw-select-onclick':\n        this.selectOnclick = newValue !== null;\n        break;\n    }\n  }\n\n  set selectOnclick(value) {\n    this.selectOnclick_ = value;\n  }\n\n  get selectOnclick() {\n    return this.selectOnclick_;\n  }\n\n  set selectType(value) {\n    this.selectType_ = value;\n  }\n\n  get selectType() {\n    return this.selectType_;\n  }\n\n  get selected() {\n    return [].concat(this.selectedIndexes_);\n  }\n\n  deselectAll() {\n    [...this.children].forEach(child => child.deselect());\n    this.selectedIndexes_ = [];\n  }\n\n  itemSelected(listItem) {\n    const index = Array.prototype.indexOf.call(this.children, listItem);\n    if (this.selectType_ === 'single') {\n      const children = [...this.children];\n      this.selectedIndexes_.forEach(i => children[i].deselect());\n      this.selectedIndexes_ = [];\n    }\n    this.selectedIndexes_.push(index);\n    this.handleChange();\n  }\n\n  itemDeselected(listItem) {\n    const index = Array.prototype.indexOf.call(this.children, listItem);\n    this.selectedIndexes_.splice(this.selectedIndexes_.indexOf(index), 1);\n    this.handleChange();\n  }\n\n  handleChange() {\n    this.dispatchEvent(new CustomEvent('change', this));\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-list');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/list/index.js?");

/***/ }),

/***/ "./src/components/media/external.css":
/*!*******************************************!*\
  !*** ./src/components/media/external.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/media/external.css?");

/***/ }),

/***/ "./src/components/menu/index.js":
/*!**************************************!*\
  !*** ./src/components/menu/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-menu');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-menu\", \n      class mdwMenu extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_onClick = this.onClick.bind(this);\n    this.bound_onPanelClick = this.onPanelClick.bind(this);\n  }\n    \n\n  connectedCallback() {\n    this.classList.add('mdw-panel--container');\n    this.button.addEventListener('click', this.bound_onClick);\n    this.panel.classList.add('mdw-menu');\n  }\n\n  onClick() {\n    this.panel.autoPosition();\n    this.panel.setPosition(this.panelPosition);\n    this.panel.open(true);\n    this.panel.addEventListener('click', this.bound_onPanelClick);\n  }\n\n  onPanelClick() {\n    this.panel.close();\n  }\n\n  set panelPosition(value) {\n    // TODO validate\n    this.panelPosition_ = value;\n  }\n\n  get panelPosition() {\n    return this.panelPosition_ || 'inner-top inner-left';\n  }\n\n  get button() {\n    if (!this.button_) this.button_ = this.children[0];\n    return this.button_;\n  }\n\n  get panel() {\n    return this.querySelector('mdw-panel');\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-menu');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/menu/index.js?");

/***/ }),

/***/ "./src/components/page/external.css":
/*!******************************************!*\
  !*** ./src/components/page/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/page/external.css?");

/***/ }),

/***/ "./src/components/panel/external.css":
/*!*******************************************!*\
  !*** ./src/components/panel/external.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/panel/external.css?");

/***/ }),

/***/ "./src/components/panel/index.js":
/*!***************************************!*\
  !*** ./src/components/panel/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-panel');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-panel\", \n      class mdwPanel extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.FOCUSABLE_ELEMENTS = [\n      'button:not(:disabled)', '[href]:not([aria-disabled=\"true\"])', 'input:not(:disabled)',\n      'select:not(:disabled)', 'textarea:not(:disabled)', '[tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n    ].join(', ');\n    this.clickOutsideClose_ = false;\n    this.boundHandleBodyClick_ = this.handleBodyClick_.bind(this);\n    this.boundHandleKeydown_ = this.handleKeydown_.bind(this);\n    this._clickOutsideCloseIgnorElement = [];\n    this._autoPosition = false;\n  }\n    \n\n  connectedCallback() {\n    this.classList.add('mdw-upgraded');\n    this.transformPropertyName = MDWUtils.transformPropertyName;\n  }\n\n  disconnectedCallback() {\n    this.removeBodyClickEvent_();\n    this.removeKeydownEvent_();\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    cancelAnimationFrame(this.animationRequestId_);\n  }\n\n  static get observedAttributes() {\n    return ['mdw-position'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case 'mdw-position':\n        this.position_ = newValue;\n        break;\n    }\n  }\n\n  set clickOutsideClose(value) {\n    this.clickOutsideClose_ = value;\n  }\n\n  set setQuickOpen(value) {\n    this.isQuickOpen_ = value;\n  }\n\n  get position() {\n    return this.position_;\n  }\n\n  setPosition(value) {\n    const split = value.split(' ');\n    this.position_ = `${split[0] || 'top'} ${split[1] || 'left'}`;\n    this.setAttribute('mdw-position', this.position_);\n  }\n\n  autoPosition() {\n    this._autoPosition = true;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  open(clickBodyToClose) {\n    if (clickBodyToClose !== undefined) this.clickOutsideClose_ = clickBodyToClose\n    // handle focused element\n    const focusableElements = this.querySelectorAll(this.FOCUSABLE_ELEMENTS);\n    this.firstFocusableElement_ = focusableElements[0];\n    this.lastFocusableElement_ = focusableElements[focusableElements.length - 1];\n    this.saveFocus();\n\n    // handle animation\n    if (!this.isQuickOpen_) {\n      this.classList.add('mdw-panel--animating-open');\n      this.animationRequestId_ = this._runNextAnimationFrame(() => {\n        this.classList.add('mdw-open');\n        if (this.isQuickOpen_) this.notifyOpen();\n        else {\n          this.openAnimationEndTimerId_ = setTimeout(() => {\n            this.openAnimationEndTimerId_ = 0;\n            this.classList.remove('mdw-panel--animating-open');\n            if (this.isHoisted_) this.setHoisetedPosition();\n            else this.setPositionStyle();\n            this.notifyOpen();\n          }, 150);\n        }\n        if (this.isHoisted_) this.setHoisetedPosition();\n        else this.setPositionStyle();\n      });\n    } else {\n      this.classList.add('mdw-open');\n    }\n\n    this.addBodyClickEvent_();\n    this.addKeydownEvent_();\n    this.isOpen_ = true;\n  }\n\n  // TODO FIX THE CLOSING ANIMATION\n  close() {\n    if (!this.isQuickOpen_) {\n      this.classList.add('mdw-panel--animating-closed');\n      this.removeBodyClickEvent_();\n      this.animationRequestId_ = this._runNextAnimationFrame(() => {\n        this.classList.remove('mdw-open');\n        if (this.isQuickOpen_) this.notifyClose();\n        else {\n          this.closeAnimationEndTimerId_ = setTimeout(() => {\n            this.closeAnimationEndTimerId_ = 0;\n            this.classList.remove('mdw-panel--animating-closed');\n            this.notifyClose();\n          }, 75);\n        }\n      });\n    } else {\n      this.classList.remove('mdw-open');\n    }\n\n    this.removeKeydownEvent_();\n    this.isOpen_ = false;\n    const isRootFocused = this.isFocused();\n    const childHasFocus = document.activeElement && this.contains(document.activeElement);\n    if (isRootFocused || childHasFocus) this.restoreFocus();\n  }\n\n  _runNextAnimationFrame(callback) {\n    cancelAnimationFrame(this._animationFrame);\n    this._animationFrame = requestAnimationFrame(() => {\n      this._animationFrame = 0;\n      clearTimeout(this._animationTimer);\n      this._animationTimer = setTimeout(callback, 0);\n    });\n  }\n\n  isFocused() {\n    return document.activeElement === this;\n  }\n\n  saveFocus() {\n    this.previousFocus_ = document.activeElement;\n  }\n\n  restoreFocus() {\n    if (this.contains(document.activeElement) && this.previousFocus_ && this.previousFocus_.focus) this.previousFocus_.focus();\n  }\n\n  focusFirstElement() {\n    if (this.firstFocusableElement_ && this.firstFocusableElement_.focus) this.firstFocusableElement_.focus()\n  }\n\n  focusLastElement() {\n    if (this.lastFocusableElement_ && this.lastFocusableElement_.focus) this.lastFocusableElement_.focus()\n  }\n\n  isFirstElementFocused() {\n    this.firstFocusableElement_ ? this.firstFocusableElement_ === document.activeElement : false;\n  }\n\n  isLastElementFocused() {\n    this.lastFocusableElement_ ? this.lastFocusableElement_ === document.activeElement : false;\n  }\n\n  addBodyClickEvent_() {\n    if (!this.clickOutsideClose_) return;\n    setTimeout(() => {\n      this.hasBodyEvent = true;\n      document.body.addEventListener('click', this.boundHandleBodyClick_);\n    }, 0);\n  }\n\n  removeBodyClickEvent_() {\n    if (this.hasBodyEvent) document.body.removeEventListener('click', this.boundHandleBodyClick_);\n    this.hasBodyEvent = false;\n  }\n\n  addKeydownEvent_() {\n    this.hasKeydownEvent = true;\n    document.body.addEventListener('keydown', this.boundHandleKeydown_);\n  }\n\n  removeKeydownEvent_() {\n    if (this.hasKeydownEvent) document.body.removeEventListener('keydown', this.boundHandleKeydown_);\n    this.hasKeydownEvent = false;\n  }\n\n  ignoreElementOnClickToClose(el) {\n    this._clickOutsideCloseIgnorElement.push(el);\n  }\n\n  handleBodyClick_(event) {\n    const el = event.target;\n    if (this._clickOutsideCloseIgnorElement.includes(el)) return;\n    if (this.contains(el)) return;\n    this.removeBodyClickEvent_();\n    this.close();\n  }\n\n  handleKeydown_(event) {\n    const { key, keyCode, shiftKey } = event;\n    const isEscape = key === 'Escape' || keyCode === 27;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isEscape) this.close();\n    else if (isTab) {\n      if (this.isLastElementFocused() && !shiftKey) {\n        this.focusFirstElement();\n        event.preventDefault();\n      } else if (this.isFirstElementFocused() && shiftKey) {\n        this.focusLastElement();\n        event.preventDefault();\n      }\n    }\n  }\n\n  notifyClose() {\n    this.dispatchEvent(new Event('MDWPanel:closed', this));\n  }\n\n  notifyOpen() {\n    this.dispatchEvent(new Event('MDWPanel:open'), this);\n  }\n\n  hoistToBody(target) {\n    this.container_ = target || this.parentNode;\n    document.body.appendChild(this);\n    this.classList.add('mdw-panel-hoisted');\n    this.isHoisted_ = true;\n  }\n\n  setHoisetedPosition() {\n    const bounds = this.container_.getBoundingClientRect();\n    this.style.top = `${bounds.top}px`;\n    this.style.left = `${bounds.left}px`;\n  }\n\n\n  setPositionStyle(parentOverride) {\n    if (parentOverride) this._parentOverride = parentOverride;\n    else if (this._parentOverride) parentOverride = this._parentOverride;\n\n    const position = this.position;\n    let parentWidth = 0;\n    let parentHeight = 0;\n    if (parentOverride) {\n      parentWidth = parentOverride.offsetWidth;\n      parentHeight = parentOverride.offsetHeight;\n    } else {\n      let parent = this.parentNode;\n      if (parent.nodeName === 'MDW-SNACKBAR') parent = parent.parentNode;\n      const parentRect = parent.getBoundingClientRect();\n      parentWidth = parentRect.width;\n      parentHeight = parentRect.height;\n    }\n\n    // use offset with and height to avoid problems due to transform: scale()\n    // using getBoundingClientRect will return the adjusted width based on the scale factor\n    const width = this.offsetWidth;\n    const height = this.offsetHeight;\n    const aValue = position.split(' ')[0];\n    const bValue = position.split(' ')[1];\n    let top = 0;\n    let left = 0;\n\n    switch(aValue) {\n      case 'top':\n        top = -height;\n        break;\n      case 'bottom':\n        top = parentHeight;\n        break;\n      case 'center':\n        top = (parentHeight / 2) - (height / 2);\n        break;\n      case 'inner-bottom':\n        top = parentHeight - height;\n        break;\n    }\n\n    switch(bValue) {\n      case 'left':\n        left = -width;\n        break;\n      case 'right':\n        left = parentWidth;\n        break;\n      case 'inner-right':\n        left = parentWidth - width;\n        break;\n      case 'center':\n        left = (parentWidth / 2) - (width / 2);\n        break;\n    }\n\n    if (this._autoPosition) {\n      const { clientWidth, clientHeight } = document.body;\n      const { x: globalX, y: globalY } = this.getBoundingClientRect();\n      if ((globalY + height) > clientHeight) top = parentHeight - height;\n      if ((globalX + width) > clientWidth) left = parentWidth - width;\n    }\n\n    this.style.top = `${parseInt(top)}px`;\n    this.style.left = `${parseInt(left)}px`;\n    this.style.transform = 'scale(1)';\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-panel');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/panel/index.js?");

/***/ }),

/***/ "./src/components/radio-group/index.js":
/*!*********************************************!*\
  !*** ./src/components/radio-group/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-radio-group');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-radio-group\", \n      class mdwRadioGroup extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_change = this.change.bind(this);\n  }\n    \n\n  connectedCallback() {\n    console.log()\n    // this.radios.forEach(r => r.input.addEventListener('change', this.bound_change));\n  }\n\n  disoconnectedCallback() {\n    // this.radios.forEach(r => r.input.removeEventListener('change', this.bound_change));\n  }\n\n  change(e) {\n    console.log(e);\n  }\n\n  get radios() {\n    return [...this.querySelectorAll('mdw-radio')];\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-radio-group');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/radio-group/index.js?");

/***/ }),

/***/ "./src/components/radio/external.css":
/*!*******************************************!*\
  !*** ./src/components/radio/external.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/radio/external.css?");

/***/ }),

/***/ "./src/components/radio/index.js":
/*!***************************************!*\
  !*** ./src/components/radio/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-radio');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n      <input type=\"radio\" name=\"\">\n      <div class=\"mdw-radio-background\">\n        <div class=\"mdw-radio__outer-circle\"></div>\n        <div class=\"mdw-radio__inner-circle\"></div>\n      </div>\n      <div class=\"mdw-ripple mdw-radio-ripple\"></div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-radio\", \n      class mdwRadio extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    // input radio will not work correctly in shadowroot\n    this.insertAdjacentHTML('afterbegin', this.template());\n  }\n    \n\n  connectedCallback() {\n    this.ripple = new MDWRipple({\n      element: this.querySelector('.mdw-ripple'),\n      triggerElement: [this.input],\n      radius: 20,\n      centered: true\n    });\n  }\n\n  disconnectedCallback() {\n    this.ripple.destroy();\n  }\n\n  get input() {\n    return this.querySelector('input');\n  }\n\n  get name() {\n    if (this.parentNode && this.parentNode.hasAttribute('name')) {\n      this.name_ = this.parentNode.getAttribute('name');\n    } else if (this.hasAttribute('name')) {\n      this.name_ = this.getAttribute('name');\n    }\n    return this.name_ || '';\n  }\n\n  template() {\n    return html`\n      <input type=\"radio\" name=\"${this.name}\">\n      <div class=\"mdw-radio-background\">\n        <div class=\"mdw-radio__outer-circle\"></div>\n        <div class=\"mdw-radio__inner-circle\"></div>\n      </div>\n      <div class=\"mdw-ripple mdw-radio-ripple\"></div>\n    `;\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-radio');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/radio/index.js?");

/***/ }),

/***/ "./src/components/select/external.css":
/*!********************************************!*\
  !*** ./src/components/select/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/select/external.css?");

/***/ }),

/***/ "./src/components/select/index.js":
/*!****************************************!*\
  !*** ./src/components/select/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-select');\n    t.innerHTML=`\n    <style>\n      ::slotted(label.mdw-empty-no-float) {\n  transform: none;\n}\n\n.mdw-select__icon {\n  background: url(\"data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23000%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E\") no-repeat center;\n  left: auto;\n  right: 8px;\n  position: absolute;\n  bottom: 16px;\n  width: 24px;\n  height: 24px;\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n}\n:host(.mdw-focused) .mdw-select__icon {\n  background: url(\"data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%236200ee%22%20fill-rule%3D%22evenodd%22%20opacity%3D%221%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E\") no-repeat center;\n  transform: rotate(180deg) translateY(-5px);\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n\n.mdw-select__icon {\n  background: url(\"data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23000%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E\") no-repeat center;\n  left: auto;\n  right: 8px;\n  position: absolute;\n  bottom: 16px;\n  width: 24px;\n  height: 24px;\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n}\n\n::slotted(select:focus) .mdw-select__icon,\n:host(.mdw-focused:focus) .mdw-select__icon {\n  background: url(\"data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%236200ee%22%20fill-rule%3D%22evenodd%22%20opacity%3D%221%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E\") no-repeat center;\n  transform: rotate(180deg) translateY(-5px);\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n:host(:not(.mdw-select--disabled)) ::slotted(select),\n:host(:not(.mdw-select--disabled)) ::slotted(.mdw-select__selected-text) {\n  /* TODO figure out what color var to use */\n  border-bottom-color: rgba(0,0,0,.42);\n  /* TODO figure out what color var to use */\n  color: rgba(0,0,0,.87);\n}\n\n:host(.mdw-focused:not(.mdw-select--disabled)) ::slotted(select),\n:host(.mdw-focused:not(.mdw-select--disabled)) ::slotted(.mdw-select__selected-text),\n:host(:not(.mdw-select--disabled)) ::slotted(select:focus),\n:host(.mdw-focused:focus:not(.mdw-select--disabled)) ::slotted(.mdw-select__selected-text) {\n  border-bottom: 2px solid;\n  border-bottom-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-outlined) ::slotted(select),\n:host(.mdw-outlined) ::slotted(.mdw-select__selected-text) {\n  border: none;\n}\n\n::slotted(select),\n::slotted(.mdw-select__selected-text) {\n  position: absolute;\n  padding: 20px 52px 4px 16px;\n  font-family: Roboto,sans-serif;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: .009375em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  box-sizing: border-box;\n  width: 100%;\n  height: 56px;\n  border: none;\n  border-bottom: 1px solid;\n  outline: none;\n  background-color: transparent;\n  color: inherit;\n  white-space: nowrap;\n  cursor: pointer;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n/* outlined */\n:host(.mdw-outlined) ::slotted(select),\n:host(.mdw-outlined) ::slotted(.mdw-select__selected-text) {\n  padding: 12px 52px 12px 16px;\n  display: flex;\n  border: none;\n  background-color: transparent;\n  z-index: 1;\n}\n:host(.mdw-outlined) ::slotted(select) {\n  border-radius: 4px;\n}\n\n::slotted(select) {\n  border-radius: 4px 4px 0 0;\n}\n\n:host([dir=rtl]) ::slotted(select),\n::slotted(select[dir=rtl]),\n:host([dir=rtl]) ::slotted(.mdw-select__selected-text),\n::slotted(.mdw-select__selected-text[dir=rtl]) {\n  padding-left: 52px;\n  padding-right: 16px;\n}\n\n:host(:not(.mdw-select--disabled)) ::slotted(label) {\n  /* TODO figure out what color var to use */\n  color: rgba(0,0,0,.6);\n}\n\n:host(:not(.mdw-select--disabled)) ::slotted(select:focus) + ::slotted(label),\n:host(.mdw-focused:not(.mdw-select--disabled)) ::slotted(label) {\n  color: var(--mdw-theme-primary);\n}\n\n::slotted(label) {\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.009375em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  position: absolute;\n  left: 0;\n  transform-origin: left top;\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  line-height: 1.15rem;\n  text-align: left;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: text;\n  overflow: hidden;\n  will-change: transform;\n  transform: none;\n  pointer-events: none;\n\n  left: 16px;\n  right: initial;\n  top: 21px;\n}\n\n:host(.mdw-no-animation) ::slotted(label) {\n  transition: none;\n}\n\n::slotted(label:not(.mdw-empty-no-float)) {\n  transform: translateY(-70%) scale(0.75);\n}\n\n::slotted(select:focus) + ::slotted(label),\n::slotted(label.mdw-select--float-above) {\n  transform: translateY(-70%) scale(0.75);\n}\n\n:host(.mdw-outlined.mdw-focused) ::slotted(label),\n:host(.mdw-outlined) ::slotted(label.mdw-select--float-above) {\n  transform: translateY(-132%) scale(0.75);\n}\n\n:host(.mdw-select--with-leading-icon) ::slotted(label) {\n  left: 48px;\n  right: initial;\n}\n\n:host(.mdw-outlined) ::slotted(label) {\n  left: 15px;\n  right: initial;\n  top: 18px;\n}\n\n:host(.mdw-outlined.mdw-select--with-leading-icon) ::slotted(label) {\n  left: 36px;\n  right: initial;\n}\n\n:host(.mdw-outlined.mdw-select--with-leading-icon) ::slotted(label.mdw-select--float-above) {\n  left: 36px;\n  right: initial;\n}\n\n.mdw-outlined-border-container {\n  display: -ms-flexbox;\n  display: flex;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  text-align: left;\n  pointer-events: none;\n}\n\n.mdw-outlined-leading {\n  border-radius: 4px 0 0 4px;\n  border-left: 1px solid;\n  border-right: none;\n  width: 12px;\n}\n\n.mdw-outlined-notch {\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  width: auto;\n  max-width: calc(100% - 12px * 2);\n}\n\n.mdw-outlined-trailing {\n  border-left: none;\n  border-right: 1px solid;\n  border-radius: 0 4px 4px 0;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n}\n\n.mdw-outlined-leading,\n.mdw-outlined-notch,\n.mdw-outlined-trailing {\n  box-sizing: border-box;\n  height: 100%;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  pointer-events: none;\n\n  border-color: rgba(0,0,0,.24);\n}\n\n.mdw-outlined-notch {\n  border-top: none;\n}\n\n:host(.mdw-focused) .mdw-outlined-leading,\n:host(.mdw-focused) .mdw-outlined-notch,\n:host(.mdw-focused) .mdw-outlined-trailing,\n::slotted(select:focus) .mdw-outlined-leading,\n::slotted(select:focus) .mdw-outlined-notch,\n::slotted(select:focus) .mdw-outlined-trailing {\n  border-width: 2px;\n  border-color: var(--mdw-theme-primary);\n}\n\n:host(.invalid) .mdw-outlined-leading,\n:host(.invalid) .mdw-outlined-notch,\n:host(.invalid) .mdw-outlined-trailing {\n  border-color: var(--mdw-theme-error);\n}\n\n    </style>\n    <render-block>\n      \n      <i class=\"mdw-select__icon\"></i>\n      <slot></slot>\n      <div class=\"mdw-line-ripple\"></div>\n      \n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-select\", \n      class mdwSelect extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.classList.add('mdw-no-animation');\n    this.enhanced = this.getAttribute('mdw-enhanced') !== null;\n    // this.setOutlined();\n    this.cloneTemplate(true);\n    this.bound_onFocus = this.onFocus.bind(this);\n    this.bound_onBlur = this.onBlur.bind(this);\n    this.bound_onChange = this.onChange.bind(this);\n    this.bound_onClick = this.onClick.bind(this);\n    this.bound_onPanelClick = this.onPanelClick.bind(this);\n    this.bound_onKeyDown = this.onKeyDown.bind(this);\n  }\n    \n\n  connectedCallback() {\n    this.querySlotted('label').classList.add('mdw-empty-no-float');\n    this.valid = this.selectElement.validity.valid;\n    if (this.enhanced) this.setupEnhanced_();\n    else {\n      this.selectElement.addEventListener('focus', this.bound_onFocus);\n      this.selectElement.addEventListener('blur', this.bound_onBlur);\n      this.selectElement.addEventListener('change', this.bound_onChange);\n    }\n\n    // capture option selected attribute and float the label\n    this.onChange();\n\n    setTimeout(() => {\n      this.classList.add('mdw-no-animation');\n    }, 0);\n  }\n\n  disconnectedCallback() {\n    document.body.removeEventListener('keydown', this.bound_onKeyDown);\n    this.selectElement.removeEventListener('focus', this.bound_onFocus);\n    this.selectElement.removeEventListener('blur', this.bound_onBlur);\n    this.selectElement.removeEventListener('change', this.bound_onChange);\n    this.selectElement.removeEventListener('click', this.bound_onClick);\n    // Make sure panel does not linger\n  }\n\n  setupEnhanced_() {\n    // lift on change event\n    const selectOnchange = this.selectElement.getAttribute('onchange');\n    if (selectOnchange) this.setAttribute('onchange', selectOnchange);\n\n    // grab selected\n    const selected = this.selectElement.querySelector('[selected]');\n\n    const enhancedEl = document.createElement('div');\n    enhancedEl.classList.add('mdw-select__selected-text');\n    enhancedEl.style.width = `${this.selectElement.offsetWidth}px`;\n    this.insertAdjacentHTML('beforeend', this.panelHTML);\n    this.panel.innerHTML = `<div class=\"options-list\">${this.selectElement.innerHTML}</div>`;\n    this.panel.style.minWidth = `${this.selectElement.offsetWidth}px`;\n    this.panel.style.transform = 'scale(1)';\n    this.panel.hoistToBody(this);\n    this.selectElement.parentNode.replaceChild(enhancedEl, this.selectElement);\n    this._selectElement = enhancedEl;\n    this.selectElement.addEventListener('click', this.bound_onClick);\n    document.body.addEventListener('keydown', this.bound_onKeyDown);\n\n    // set selected\n    if (selected) {\n      this.value_ = selected.value;\n      this.setSelectedText(selected.innerText);\n    }\n  }\n\n  get panel() {\n    if (!this.panel_) this.panel_ = this.querySelector('mdw-panel');\n    return this.panel_;\n  }\n\n  onClick(event) {\n    this._focusIndex === undefined;\n    this.onFocus();\n    this.panel.open(true);\n    this.panel.addEventListener('MDWPanel:closed', this.bound_onBlur);\n    this.panel.addEventListener('click', this.bound_onPanelClick);\n  }\n\n  onPanelClick(event) {\n    if (event.target.nodeName !== 'OPTION') return;\n    this.value = event.target.value;\n    this.setSelectedText(event.target.innerText);\n    const currentSelected = this.panel.querySelector('.mdw-selected');\n    if (currentSelected) currentSelected.classList.remove('mdw-selected');\n    event.target.classList.add('mdw-selected');\n    this.panel.close();\n  }\n\n  onChange() {\n    if (this.value && this.label) {\n      this.label.classList.add('mdw-select--float-above');\n      this.querySlotted('label').classList.remove('mdw-empty-no-float');\n      if (this.outlined) this.notch.style.width = this.labelWidth + 'px';\n    } else {\n      this.label.classList.remove('mdw-select--float-above');\n      this.querySlotted('label').classList.add('mdw-empty-no-float');\n      if (this.outlined) this.notch.style.width = '0';\n    }\n  }\n\n  onFocus() {\n    this.classList.add('mdw-focused');\n    if (this.outlined) this.notch.style.width = this.labelWidth + 'px';\n  }\n\n  onBlur() {\n    this.classList.remove('mdw-focused');\n    this.classList.toggle('mdw-not-empty', (this.selectElement.value || this.value_) && !!(this.selectElement.value || this.value_).length);\n    this.valid = this.selectElement.validity && this.selectElement.validity.valid;\n    this.classList.toggle('mdw-invalid', !this.valid);\n    if (this.panel) {\n      this.panel.removeEventListener('MDWPanel:closed', this.bound_onBlur);\n      this.panel.removeEventListener('click', this.bound_onPanelClick);\n    }\n  }\n\n  onInput() {\n    if (this.valid !== this.selectElement.validity.valid) {\n      this.valid = this.selectElement.validity.valid;\n      this.classList.toggle('mdw-invalid', !this.valid);\n    }\n  }\n\n  setSelectedText(value) {\n    this.selectElement.innerText = value;\n  }\n\n  set value(value) {\n    this.value_ = value;\n    this.onChange();\n\n    // const event = document.createEvent('Event');\n    // event.initEvent('onchange', true, true);\n    this.dispatchEvent(new Event('change'));\n  }\n\n  get value() {\n    return this.selectElement.value || this.value_;\n  }\n\n  get selectElement() {\n    if (!this._selectElement) this._selectElement = this.querySlotted('select');\n    return this._selectElement;\n  }\n\n  get notch() {\n    if (!this._notch) this._notch = this.shadowRoot.querySelector('.mdw-outlined-notch');\n    return this._notch;\n  }\n\n  get label() {\n    if (!this._label) this._label = this.querySlotted('label');\n    return this._label;\n  }\n\n  get labelWidth() {\n    return this.label.offsetWidth * 0.9;\n  }\n\n  get outlined() {\n    return [].slice.apply(this.classList || []).includes('mdw-outlined');\n  }\n\n  onKeyDown(e) {\n    if (!this.panel.isOpen()) return\n\n    switch (e.keyCode) {\n      case 40: //down\n      case 39: //right\n        this.focusNext();\n        break;\n\n      case 38: //up\n      case 37: //left\n        this.focusPrevious();\n        break;\n\n      case 13: //enter\n        this.selectFocused();\n        break;\n\n      default:\n        if (e.keyCode >= 31 || e.keyCode <= 90) {\n          const nodeIndex = this.keyboardSearchNodes(e.keyCode);\n          if (nodeIndex !== undefined) this.selectNode(nodeIndex);\n          e.stopPropagation();\n          e.preventDefault();\n        }\n    }\n  }\n\n  keyboardSearchNodes(keyCode) {\n    if (this._clearSearchTimeout !== undefined) clearTimeout(this._clearSearchTimeout);\n    this._clearSearchTimeout = setTimeout(() => {\n      this._clearSearchTimeout = undefined;\n      this._keyboardSearchStr = '';\n      this._keyboardOptionNames = undefined;\n    }, 300);\n    if (this._keyboardSearchStr === undefined) this._keyboardSearchStr = '';\n    this._keyboardSearchStr += String.fromCharCode(keyCode);\n    const search = new RegExp('^' + this._keyboardSearchStr, 'i');\n\n    if (!this._keyboardOptionNames) this._keyboardOptionNames = [...this.panel.firstChild.children].map(el => el.innerText);\n\n    const length = this._keyboardOptionNames.length;\n    let i = 0;\n    while (i < length) {\n      if (search.test(this._keyboardOptionNames[i])) {\n        return i;\n      }\n      i += 1;\n    }\n  }\n\n  selectNode(index) {\n    const optionElements = [...this.panel.firstChild.children];\n    this._focusIndex = index;\n    if (this._focusedOption) this._focusedOption.classList.remove('mdw-focused');\n    this._focusedOption = optionElements[this._focusIndex];\n    this._focusedOption.classList.add('mdw-focused');\n  }\n\n  focusNext() {\n    if (!this.panel.isOpen()) return;\n    const optionElements = [...this.panel.firstChild.children];\n    if (this._focusIndex === undefined) this._focusIndex = 0;\n    else this._focusIndex += 1;\n    if (this._focusIndex > optionElements.length - 1) this._focusIndex = optionElements.length - 1;\n    if (this._focusedOption) this._focusedOption.classList.remove('mdw-focused');\n    this._focusedOption = optionElements[this._focusIndex];\n    this._focusedOption.classList.add('mdw-focused');\n  }\n\n  focusPrevious() {\n    if (!this.panel.isOpen()) return;\n    const optionElements = [...this.panel.firstChild.children];\n    if (this._focusIndex === undefined) this._focusIndex = 0;\n    else this._focusIndex -= 1;\n    if (this._focusIndex <= 0) this._focusIndex = 0;\n    if (this._focusedOption) this._focusedOption.classList.remove('mdw-focused');\n    this._focusedOption = optionElements[this._focusIndex];\n    this._focusedOption.classList.add('mdw-focused');\n  }\n\n  selectFocused() {\n    if (!this.panel.isOpen()) return;\n    const optionElements = [...this.panel.firstChild.children];\n    if (this._focusIndex == undefined || this._focusIndex > optionElements.length - 1) this._focusIndex = 0;\n    this.onPanelClick({ target: optionElements[this._focusIndex] });\n  }\n\n  template() {\n    return `\n      <i class=\"mdw-select__icon\"></i>\n      <slot></slot>\n      ${this.outlined ? '' : '<div class=\"mdw-line-ripple\"></div>'}\n      ${!this.outlined ? '' : `\n        <div class=\"mdw-outlined-border-container\">\n          <div class=\"mdw-outlined-leading\"></div>\n          <div class=\"mdw-outlined-notch\"></div>\n          <div class=\"mdw-outlined-trailing\"></div>\n        </div>\n      `}\n    `;\n  }\n\n  get panelHTML() {\n    return '<mdw-panel mdw-position=\"bottom inner-left\"></mdw-panel>';\n  }\n\n  cssFile() {\n    return '/src/components/select/internal.css';\n  }\n\n  querySlotted(selector) {\n    return this.shadowRoot.querySelector('slot').assignedNodes().find(el => el.matches && el.matches(selector));\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-select');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/select/index.js?");

/***/ }),

/***/ "./src/components/slider/external.css":
/*!********************************************!*\
  !*** ./src/components/slider/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/slider/external.css?");

/***/ }),

/***/ "./src/components/slider/index.js":
/*!****************************************!*\
  !*** ./src/components/slider/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-slider');\n    t.innerHTML=`\n    <style>\n      .mdw-slider__track-container {\n  position: absolute;\n  top: 50%;\n  width: 100%;\n  height: 10px;\n  margin-top: -6px;\n  overflow: hidden;\n  user-select: none;\n}\n\n.mdw-slider__track {\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  top: 50%;\n  user-select: none;\n  /* background-color: var(--mdw-theme-secondary); */\n}\n\n/* :host(.mdw-primary) .mdw-slider__track {\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-error) .mdw-slider__track {\n  background-color: var(--mdw-theme-error);\n} */\n\n\n.mdw-slider__thumb-container {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  user-select: none;\n  z-index: 2;\n}\n\n.mdw-slider__thumb {\n  box-sizing: border-box;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  margin-top: -50%;\n  z-index: 2;\n  background-color: var(--mdw-theme-secondary);\n  cursor: pointer;\n  user-select: none;\n}\n\n:host(.mdw-primary) .mdw-slider__thumb {\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-error) .mdw-slider__thumb {\n  background-color: var(--mdw-theme-error);\n}\n\n.mdw-slider__thumb-hover {\n  position: absolute;\n  box-sizing: border-box;\n  top: -12px;\n  left: -6px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  transform-origin: center center;\n  transition: opacity .1s ease-out,fill .1s ease-out,\n              transform .1s ease-out,fill .1s ease-out;\n  opacity: 0;\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.16);\n  cursor: pointer;\n  user-select: none;\n}\n\n:host(.mdw-primary) .mdw-slider__thumb-hover {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n:host(.mdw-error) .mdw-slider__thumb-hover {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.16);\n}\n\n:host(.mdw-hover) .mdw-slider__thumb-hover {\n  opacity: 1;\n}\n\n:host(.mdw-pressed) .mdw-slider__thumb-hover {\n  transform: scale(1.8);\n}\n\n\n\n\n/* --- notches --- */\n\n.mdw-slider__notch-container {\n  display: flex;\n  width: 200%;\n  user-select: none;\n}\n\n.mdw-slider__notch-pre-container {\n  width: 100%;\n  height: 2px;\n  display: flex;\n  flex-direction: row;\n  margin-top: 5px;\n  overflow: hidden;\n  z-index: 1;\n  background-color: var(--mdw-theme-secondary);\n  user-select: none;\n}\n\n:host(.mdw-primary) .mdw-slider__notch-pre-container {\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-error) .mdw-slider__notch-pre-container {\n  background-color: var(--mdw-theme-error);\n}\n\n.mdw-slider__notch-pre-container .mdw-slider__notch {\n  height: 2px;\n  flex: 1;\n  border-left: 3px solid rgba(255, 255, 255, 0.6);\n}\n\n.mdw-slider__notch-post-container {\n  width: 100%;\n  height: 2px;\n  display: flex;\n  flex-direction: row;\n  margin-top: 5px;\n  overflow: hidden;\n  z-index: 1;\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.5);\n  user-select: none;\n}\n\n:host(.mdw-primary) .mdw-slider__notch-post-container {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.5);\n}\n\n:host(.mdw-error) .mdw-slider__notch-post-container {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.5);\n}\n\n.mdw-slider__notch-post-container .mdw-slider__notch {\n  height: 2px;\n  flex: 1;\n  border-left: 3px solid rgba(0, 0, 0, 0.6);\n}\n\n    </style>\n    <render-block>\n      \n      <div class=\"mdw-slider__track-container\">\n        <div class=\"mdw-slider__track\"></div>\n\n        <div class=\"mdw-slider__notch-container\">\n          <div class=\"mdw-slider__notch-pre-container\">\n            \n          </div>\n\n          <div class=\"mdw-slider__notch-post-container\">\n            \n          </div>\n        </div>\n      </div>\n      <div class=\"mdw-slider__thumb-container\">\n        <div class=\"mdw-slider__thumb\"></div>\n        <div class=\"mdw-slider__thumb-hover\"></div>\n      </div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-slider\", \n      class mdwSlider extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n    this.bound_onMouseDown = this.onMouseDown.bind(this);\n    this.bound_onMouseUp = this.onMouseUp.bind(this);\n    this.bound_onMouseMove = this.onMouseMove.bind(this);\n    this.bound_onMouseEnter = this.onMouseEnter.bind(this);\n    this.bound_onMouseLeave = this.onMouseLeave.bind(this);\n    this.bound_trackClick = this.trackClick.bind(this);\n  }\n    \n\n  connectedCallback() {\n    this.value = this.attrValue;\n    this.thumbContainer.style.left = `${((this.attrValue - this.min) / this.range) * this.offsetWidth}px`;\n    this.notchContainer.style.marginLeft = `-${this.offsetWidth - (((this.attrValue - this.min) / this.range) * this.offsetWidth)}px`;\n    this.throttled_dispatchChange = MDWUtils.rafThrottle(this.dispatchChange);\n    this.thumb.addEventListener('mousedown', this.bound_onMouseDown);\n    this.thumb.addEventListener('mouseenter', this.bound_onMouseEnter);\n    this.track.addEventListener('click', this.bound_trackClick);\n  }\n\n  disconnectedCallback() {\n    this.thumb.removeEventListener('mousedown', this.bound_onMouseDown);\n    this.thumb.removeEventListener('mouseenter', this.bound_onMouseEnter);\n    this.thumb.removeEventListener('mouseleave', this.bound_onMouseLeave);\n    this.track.removeEventListener('click', this.bound_trackClick);\n    document.removeEventListener('mouseup', this.bound_onMouseUp);\n    document.removeEventListener('mousemove', this.bound_onMouseMove);\n  }\n\n  static get observedAttributes() {\n    return ['value', 'min', 'max', 'step'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n    if (['min', 'max', 'step'].includes(name)) this.render();\n  }\n\n  get min() {\n    return this.min_ || 0;\n  }\n\n  set min(value) {\n    this.min_ = parseFloat(value);\n  }\n\n  get max() {\n    return this.max_ || 100;\n  }\n\n  set max(value) {\n    this.max_ = parseFloat(value);\n  }\n\n  get range() {\n    return this.max - this.min;\n  }\n\n  get step() {\n    return this.step_;\n  }\n\n  set step(value) {\n    this.step_ = parseFloat(value);\n  }\n\n  get stepCount() {\n    return !this.step ? 0 : Math.floor(this.range / this.step);\n  }\n\n  get attrValue() {\n    let value = parseFloat(this.getAttribute('value') || 0);\n    if (value < this.min) value = this.min;\n    return value;\n  }\n\n  get value() {\n    const { width } = this.getBoundingClientRect();\n    const x = (this.thumbContainer.style.left || '0px').replace('px', '');\n    const percent = x / width;\n    const range = this.range;\n    this.value_ = this.min + (percent * range);\n    // check if the step is a integer and then garentee the value is an int\n    // becuase of how math works in javascript(floating point) this is not a garentee without parseInt\n    if (!(''+this.step).includes('.')) this.value_ = parseInt(this.value_);\n    return this.value_ || 0;\n  }\n\n  set value(value) {\n    this.value_ = parseFloat(value);\n  }\n\n  get thumb() {\n    return this.shadowRoot.querySelector('.mdw-slider__thumb-hover');\n  }\n\n  get thumbContainer() {\n    if (!this.thumbContainer_) this.thumbContainer_ = this.shadowRoot.querySelector('.mdw-slider__thumb-container');\n    return this.thumbContainer_;\n  }\n\n  get notchContainer() {\n    if (!this.notchContainer_) this.notchContainer_ = this.shadowRoot.querySelector('.mdw-slider__notch-container');\n    return this.notchContainer_;\n  }\n\n  get track() {\n    return this.shadowRoot.querySelector('.mdw-slider__track-container');\n  }\n\n  trackClick(e) {\n    const { left, width } = this.getBoundingClientRect();\n    let x = e.layerX;\n    if (e.clientX < left) x = 0;\n    if (x > width) x = width;\n    this.thumbContainer.style.left = `${this.snap(x, width)}px`;\n    this.notchContainer.style.marginLeft = `-${this.offsetWidth - this.snap(x, width)}px`;\n    this.dispatchChange();\n  }\n\n  onMouseDown(e) {\n    this.classList.add('mdw-pressed');\n    document.addEventListener('mouseup', this.bound_onMouseUp);\n    document.addEventListener('mousemove', this.bound_onMouseMove);\n  }\n\n  onMouseUp(e) {\n    this.classList.remove('mdw-pressed');\n    document.removeEventListener('mouseup', this.bound_onMouseUp);\n    document.removeEventListener('mousemove', this.bound_onMouseMove);\n  }\n\n  onMouseMove(e) {\n    const { left, width } = this.getBoundingClientRect();\n    let x = e.layerX;\n    if (e.clientX < left) x = 0;\n    if (x > width) x = width;\n    this.thumbContainer.style.left = `${this.snap(x, width)}px`;\n    this.notchContainer.style.marginLeft = `-${this.offsetWidth - this.snap(x, width)}px`;\n    this.throttled_dispatchChange();\n  }\n\n  onMouseEnter(e) {\n    this.classList.add('mdw-hover');\n    this.thumb.addEventListener('mouseleave', this.bound_onMouseLeave);\n  }\n\n  onMouseLeave(e) {\n    this.classList.remove('mdw-hover');\n    this.thumb.removeEventListener('mouseleave', this.bound_onMouseLeave);\n  }\n\n  snap(x, width) {\n    if (!this.step) return x;\n    const percent = x / width;\n    const range = this.range;\n    const convertedValue = percent * range;\n    const snapedValue = convertedValue - (convertedValue % this.step);\n    return (snapedValue / range) * width\n  }\n\n  dispatchChange() {\n    this.dispatchEvent(new Event('change', this));\n  }\n\n  cssFile() {\n    return '/src/components/slider/internal.css'\n  }\n\n  template() {\n    return html`\n      <div class=\"mdw-slider__track-container\">\n        <div class=\"mdw-slider__track\"></div>\n\n        <div class=\"mdw-slider__notch-container\">\n          <div class=\"mdw-slider__notch-pre-container\">\n            ${[...new Array(this.stepCount)].map(i => `<div class=\"mdw-slider__notch\"></div>`).join('\\n')}\n          </div>\n\n          <div class=\"mdw-slider__notch-post-container\">\n            ${[...new Array(this.stepCount)].map(i => `<div class=\"mdw-slider__notch\"></div>`).join('\\n')}\n          </div>\n        </div>\n      </div>\n      <div class=\"mdw-slider__thumb-container\">\n        <div class=\"mdw-slider__thumb\"></div>\n        <div class=\"mdw-slider__thumb-hover\"></div>\n      </div>\n    `;\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-slider');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/slider/index.js?");

/***/ }),

/***/ "./src/components/snackbar/external.css":
/*!**********************************************!*\
  !*** ./src/components/snackbar/external.css ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/snackbar/external.css?");

/***/ }),

/***/ "./src/components/snackbar/index.js":
/*!******************************************!*\
  !*** ./src/components/snackbar/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-snackbar');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-snackbar\", \n      class mdwSnackbar extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_onPanelClose = this.onPanelClose.bind(this);\n  }\n    \n\n  connectedCallback() {\n    this.hasBckdrop = true;\n    this.panel.clickOutsideClose = false;\n  }\n\n  disconnectedCallback() {\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n  }\n\n  get panel() {\n    return this.querySelector('mdw-panel');\n  }\n\n  get position() {\n    return this.position_ || 'inner-bottom inner-left';\n  }\n\n  setPosition(value) {\n    const split = value.split(' ');\n    this.position_ = `${split[0] || 'top'} ${split[1] || 'left'}`;\n    this.panel.setPosition(this.position);\n  }\n\n  show() {\n    MDWSnackbar.add(this);\n  }\n\n  close(ok) {\n    MDWSnackbar.remove(this, ok);\n  }\n\n  _open() {\n    this.panel.setPosition(this.position);\n    this.panel.open();\n    this.panel.addEventListener('MDWPanel:closed', this.bound_onPanelClose);\n    this.autoCancelTimeout = setTimeout(() => {\n      this.close();\n    }, 3000);\n  }\n\n  _close(ok) {\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n    this.panel.close();\n    this.dispatchClose(ok);\n    clearTimeout(this.autoCancelTimeout);\n  }\n\n  onPanelClose() {\n    this.panel.removeEventListener('MDWPanel:closed', this.bound_onPanelClose);\n  }\n\n  dispatchClose(isOk = false) {\n    this.dispatchEvent(new CustomEvent('close', {\n      detail: {\n        ok: isOk\n      }\n    }));\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-snackbar');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/snackbar/index.js?");

/***/ }),

/***/ "./src/components/snackbar/service.js":
/*!********************************************!*\
  !*** ./src/components/snackbar/service.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWSnackbar = new class MDWSnackbar {\n  constructor() {\n    this.queue = [];\n  }\n\n  add(el) {\n    this.queue.push({el});\n    this.handleQueue();\n  }\n\n  remove(el, ok) {\n    if (this.current && this.current.el === el) el._close(ok);\n    else this.queue = this.queue.filter(e => e.el !== el);\n  }\n\n  handleQueue() {\n    if (this.queue.length === 0) return;\n\n    if (!this.current) {\n      this.current = this.queue.shift();\n      this.current.el._open();\n      this.current.el.addEventListener('close', () => {\n        this.current = undefined;\n        setTimeout(() => {\n          this.handleQueue();\n        }, 300);\n      });\n    }\n  }\n\n  show({ message, actionLabel, position }) {\n    return new Promise(resolve => {\n      const id = this.uid();\n      const template = this.template({ id, message, actionLabel });\n\n      this.topLevelElement.insertAdjacentHTML('beforeend', template);\n      const el = document.querySelector(`#${id}`);\n      const onclose = (e) => {\n        resolve(e.detail.ok);\n        el.removeEventListener('close', onclose);\n        el.remove();\n      };\n      el.addEventListener('close', onclose);\n      if (position) el.setPosition(position);\n      el.show();\n    });\n  }\n\n  get topLevelElement() {\n    let el = document.body.querySelector('mdw-content');\n    if (el) return el;\n\n    el = document.bodyquerySelector('mdw-body');\n    if (el) return el;\n\n    return document.body;\n  }\n\n  uid() {\n    return `snackbar_${parseInt(Math.random() * 99999)}`;\n  }\n\n  template({ id, message, actionLabel }) {\n    return html`\n      <mdw-snackbar id=\"${id}\">\n        <mdw-panel>\n          <mdw-snackbar-container>\n            <mdw-snackbar-content>${message}</mdw-snackbar-content>\n            <mdw-snackbar-actions>\n              ${!!actionLabel ? `<mdw-button class=\"mdw-action-button\">${actionLabel}</mdw-button>` : ''}\n              <mdw-button onclick=\"${id}.close(true)\" class=\"mdw-close-button mdw-icon\">\n                <mdw-icon>close</mdw-icon>\n              </mdw-button>\n            </mdw-snackbar-actions>\n          </mdw-snackbar-container>\n        </mdw-panel>\n      </mdw-snackbar>\n    `;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/components/snackbar/service.js?");

/***/ }),

/***/ "./src/components/switch/external.css":
/*!********************************************!*\
  !*** ./src/components/switch/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/switch/external.css?");

/***/ }),

/***/ "./src/components/switch/index.js":
/*!****************************************!*\
  !*** ./src/components/switch/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-switch');\n    t.innerHTML=`\n    <style>\n      \n.mdw-track {\n  box-sizing: border-box;\n  width: 32px;\n  height: 14px;\n  border: 1px solid;\n  border-radius: 7px;\n  opacity: .38;\n  transition: opacity 90ms cubic-bezier(.4,0,.2,1),\n              background-color 90ms cubic-bezier(.4,0,.2,1),\n              border-color 90ms cubic-bezier(.4,0,.2,1);\n}\n\n:host(:not(.checked)) .mdw-track {\n  background-color: #000;\n  border-color: #000;\n}\n\n:host(.checked) .mdw-track {\n  background-color: var(--mdw-theme-secondary);\n  border-color: var(--mdw-theme-secondary);\n  opacity: .54;\n}\n\n:host(.checked.mdw-primary) .mdw-track {\n  background-color: var(--mdw-theme-primary);\n  border-color: var(--mdw-theme-primary);\n}\n\n:host(.checked.mdw-error) .mdw-track {\n  background-color: var(--mdw-theme-error);\n  border-color: var(--mdw-theme-error);\n}\n\n\n\n/* --- thumb underlay --- */\n\n.mdw-thumb-underlay {\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n  display: flex;\n  position: absolute;\n  will-change: transform,opacity;\n  left: -18px;\n  right: auto;\n  top: -17px;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  transform: translateX(0);\n  transition: transform 90ms cubic-bezier(.4,0,.2,1),\n              background-color 90ms cubic-bezier(.4,0,.2,1),\n              border-color 90ms cubic-bezier(.4,0,.2,1);\n}\n\n:host(.checked) .mdw-thumb-underlay {\n  transform: translateX(20px);\n}\n\n.mdw-thumb-underlay:after,\n.mdw-thumb-underlay:before {\n  position: absolute;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  background-color: var(--mdw-theme-secondary);\n}\n\n:host(.mdw-primary) .mdw-thumb-underlay:after,\n:host(.mdw-primary) .mdw-thumb-underlay:before {\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.mdw-error) .mdw-thumb-underlay:after,\n:host(.mdw-error) .mdw-thumb-underlay:before {\n  background-color: var(--mdw-theme-error);\n}\n\n.mdw-thumb-underlay:before {\n  transition: opacity 15ms linear,background-color 15ms linear;\n  z-index: 1;\n}\n\n\n\n/* --- thumb --- */\n\n.mdw-thumb {\n  box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n              0 2px 2px 0 rgba(0,0,0,.14),\n              0 1px 5px 0 rgba(0,0,0,.12);\n  box-sizing: border-box;\n  width: 20px;\n  height: 20px;\n  border: 10px solid;\n  border-radius: 50%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n:host(.checked) .mdw-thumb {\n  background-color: var(--mdw-theme-secondary);\n  border-color: var(--mdw-theme-secondary);\n}\n\n:host(.checked.mdw-primary) .mdw-thumb {\n  background-color: var(--mdw-theme-primary);\n  border-color: var(--mdw-theme-primary);\n}\n\n:host(.checked.mdw-error) .mdw-thumb {\n  background-color: var(--mdw-theme-error);\n  border-color: var(--mdw-theme-error);\n}\n\n:host(:not(.checked)) .mdw-thumb {\n  background-color: #fff;\n  border-color: #fff;\n}\n\n\n/* --- input --- */\n\ninput {\n  left: 0;\n  right: auto;\n  position: absolute;\n  top: 0;\n  width: 68px;\n  height: 48px;\n  margin: 0;\n  opacity: 0;\n  cursor: pointer;\n  pointer-events: auto;\n}\n\n:host(.checked) input {\n  transform: translateX(-20px);\n}\n\n\n\n/* --- ripple --- */\n\n.mdw-ripple {\n  overflow: hidden;\n}\n\n.mdw-ripple.mdw-ripple-unbounded {\n  overflow: visible;\n}\n\n.mdw-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.16);\n}\n\n:host(.mdw-primary) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n:host(.mdw-error) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.16);\n}\n\n.mdw-switch-ripple {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 50%;\n  z-index: 1;\n  pointer-events: none;\n}\n\n    </style>\n    <render-block>\n      \n      <div class=\"mdw-track\"></div>\n      <div class=\"mdw-thumb-underlay\">\n        <div class=\"mdw-thumb\">\n          <input type=\"checkbox\" role=\"switch\">\n          <div class=\"mdw-ripple mdw-switch-ripple\"></div>\n        </div>\n      </div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-switch\", \n      class mdwSwitch extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_onInputChange = this.onInputChange.bind(this);\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    this.input.addEventListener('change', this.bound_onInputChange);\n    this.ripple = new MDWRipple({\n      element: this.shadowRoot.querySelector('.mdw-ripple'),\n      triggerElement: [this.input],\n      radius: 20,\n      centered: true\n    });\n  }\n\n  disconnectedCallback() {\n    this.input.addEventListener('click', this.bound_click);\n    this.ripple.destroy();\n  }\n\n  static get observedAttributes() {\n    return ['checked', 'disabled'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n  }\n\n  get input() {\n    if (!this.input_) this.input_ = this.shadowRoot.querySelector('input');\n    return this.input_;\n  }\n\n  get checked() {\n    return this.input.checked;\n  }\n\n  set checked(value) {\n    if (value === '') value = true;\n    this.input.checked = value;\n    this.updateCheckedClass();\n  }\n\n  set disabled(value) {\n    value = !!value || value === '';\n    if (value) this.input.setAttribute('disabled', 'disabled');\n    else this.input.removeAttribute('disabled');\n  }\n\n  updateCheckedClass() {\n    if (this.checked) this.classList.add('checked');\n    else this.classList.remove('checked');\n  }\n\n  dispatchChange() {\n    this.dispatchEvent(new CustomEvent('change', this));\n  }\n\n  onInputChange(e) {\n    this.updateCheckedClass();\n    this.dispatchChange();\n  }\n\n  cssFile() {\n    return '/src/components/switch/internal.css'\n  }\n\n  template() {\n    return html`\n      <div class=\"mdw-track\"></div>\n      <div class=\"mdw-thumb-underlay\">\n        <div class=\"mdw-thumb\">\n          <input type=\"checkbox\" role=\"switch\">\n          <div class=\"mdw-ripple mdw-switch-ripple\"></div>\n        </div>\n      </div>\n    `;\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-switch');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/switch/index.js?");

/***/ }),

/***/ "./src/components/tabs/tab-body/external.css":
/*!***************************************************!*\
  !*** ./src/components/tabs/tab-body/external.css ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/tabs/tab-body/external.css?");

/***/ }),

/***/ "./src/components/tabs/tab-body/index.js":
/*!***********************************************!*\
  !*** ./src/components/tabs/tab-body/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-tab-body');\n    t.innerHTML=`\n    <style>\n      mdw-tab-body-content {\n  height: 100%;\n  overflow: auto;\n}\n\n    </style>\n    <render-block>\n      \n      <mdw-tab-body-content>\n        <!-- slot is added dynamicly -->\n      </mdw-tab-body-content>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-tab-body\", \n      class mdwTabBody extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    this.parentNode.registerBody(this);\n  }\n\n  disconnectedCallback() {\n    this.parentNode.unregisterBody(this);\n  }\n\n  addSlot() {\n    this.shadowRoot.querySelector('mdw-tab-body-content').insertAdjacentHTML('beforeend', '<slot></slot>');\n  }\n\n  removeSlot() {\n    this.shadowRoot.querySelector('slot').remove();\n  }\n\n  activate() {\n    this.addSlot();\n    this.classList.add('mdw-active');\n  }\n\n  deactivate() {\n    this.removeSlot();\n    this.classList.remove('mdw-active');\n  }\n\n  template() {\n    return html`\n      <mdw-tab-body-content>\n        <!-- slot is added dynamicly -->\n      </mdw-tab-body-content>\n    `;\n  }\n\n  cssFile() {\n    return 'src/components/tabs/tab-body/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-tab-body');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/tabs/tab-body/index.js?");

/***/ }),

/***/ "./src/components/tabs/tab-button/external.css":
/*!*****************************************************!*\
  !*** ./src/components/tabs/tab-button/external.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/tabs/tab-button/external.css?");

/***/ }),

/***/ "./src/components/tabs/tab-button/index.js":
/*!*************************************************!*\
  !*** ./src/components/tabs/tab-button/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-tab-button');\n    t.innerHTML=`\n    <style>\n      :host(.mdw-show-spinner) span.text {\n  opacity: 0;\n}\n\n/* Add this to button or creat a new componenet mdw-tab */\n.mdw-tab-button-indicator {\n  display: flex;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n:host(.mdw-active) .mdw-tab-button-indicator .mdw-tab-button-indicator__content {\n  transition: transform .2s cubic-bezier(.4,0,.2,1);\n}\n\n.mdw-tab-button-indicator__content {\n  opacity: 0;\n  transform-origin: left;\n}\n\n:host(.mdw-active) .mdw-tab-button-indicator__content {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.mdw-tab-button-indicator .mdw-tab-button-indicator__content--underline {\n  align-self: flex-end;\n  width: 100%;\n  background-color: var(--mdw-theme-primary);\n  height: 2px;\n}\n\n\n/* --- Ripple --- */\n\n.mdw-ripple {\n  overflow: hidden;\n}\n\n.mdw-ripple.mdw-ripple-unbounded {\n  overflow: visible;\n}\n\n.mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-foreground--rgb), 0.16);\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n\n.mdw-tab-button-ripple,\n.mdw-tab-button-focus-overlay {\n  border-radius: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n}\n\n:host(.mdw-active) .mdw-ripple-element {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n    </style>\n    <render-block>\n      \n      <span class=\"text\"><slot></slot></span>\n      <span class=\"mdw-tab-button-indicator\">\n        <span class=\"mdw-tab-button-indicator__content mdw-tab-button-indicator__content--underline\"></span>\n      </span>\n      <div class=\"mdw-ripple mdw-tab-button-ripple\"></div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-tab-button\", \n      class mdwTabButton extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.bound_click = this.click.bind(this);\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    this.ripple = new MDWRipple({\n      element: this.shadowRoot.querySelector('.mdw-ripple'),\n      triggerElement: this\n    });\n    this.parentNode.registerTab(this);\n    this.addEventListener('click', this.bound_click);\n  }\n\n  disconnectedCallback() {\n    this.ripple.destroy();\n    this.parentNode.unregisterTab(this);\n    this.removeEventListener('click', this.bound_click);\n  }\n\n  get indicator() {\n    return this.shadowRoot.querySelector('.mdw-tab-button-indicator__content');\n  }\n\n  click(e) {\n    this.parentNode.tabClick(this);\n  }\n\n  activate() {\n    clearTimeout(this._animationTimer);\n    this.indicator.style.transform = ``;\n    this._runNextAnimationFrame(() => {\n      this._animationTimer = setTimeout(() => {\n        this.classList.add('mdw-active');\n      }, 180);\n    });\n  }\n\n  deactivate(moveX) {\n    clearTimeout(this._animationTimer);\n    this.indicator.style.transform = `translateX(${moveX.toString()}px)`;\n    this._animationTimer = setTimeout(() => {\n      this.classList.remove('mdw-active');\n    }, 200);\n  }\n\n  _runNextAnimationFrame(callback) {\n    cancelAnimationFrame(this._animationFrame);\n    this._animationFrame = requestAnimationFrame(() => {\n      this._animationFrame = 0;\n      clearTimeout(this._animationTimer);\n      this._animationTimer = setTimeout(callback, 0);\n    });\n  }\n\n  template() {\n    return html`\n      <span class=\"text\"><slot></slot></span>\n      <span class=\"mdw-tab-button-indicator\">\n        <span class=\"mdw-tab-button-indicator__content mdw-tab-button-indicator__content--underline\"></span>\n      </span>\n      <div class=\"mdw-ripple mdw-tab-button-ripple\"></div>\n    `;\n  }\n\n  cssFile() {\n    return 'src/components/tabs/tab-button/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-tab-button');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/tabs/tab-button/index.js?");

/***/ }),

/***/ "./src/components/tabs/tabs-bar/external.css":
/*!***************************************************!*\
  !*** ./src/components/tabs/tabs-bar/external.css ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/tabs/tabs-bar/external.css?");

/***/ }),

/***/ "./src/components/tabs/tabs-bar/index.js":
/*!***********************************************!*\
  !*** ./src/components/tabs/tabs-bar/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-tabs-bar');\n    t.innerHTML=`\n    <style>\n      mdw-tabs-bar-scroller {\n  display: block;\n  overflow-y: hidden;\n}\n\nmdw-tabs-bar-scroller-area {\n  display: flex;\n  /* overflow-x: scroll; */\n}\n\nmdw-tabs-bar-scroller-content {\n  position: relative;\n  display: flex;\n  flex: 1 0 auto;\n  transform: none;\n  will-change: transform;\n}\n\n::slotted(mdw-button) {\n  flex: 1 0 auto;\n}\n\n    </style>\n    <render-block>\n      \n      <mdw-tabs-bar-scroller>\n        <mdw-tabs-bar-scroller-area>\n          <mdw-tabs-bar-scroller-content>\n            <slot></slot>\n          </mdw-tabs-bar-scroller-content>\n        </mdw-tabs-bar-scroller-area>\n      </mdw-tabs-bar-scroller>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-tabs-bar\", \n      class mdwTabsBar extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this._activeTab = 0;\n    this.tabIdCounter = 0;\n    this._contentElements = [];\n    this.cloneTemplate();\n  }\n    \n\n  // called from mdw-tab\n  registerTab(el) {\n    el.setAttribute('tab-id', this.tabIdCounter);\n    if (this.tabIdCounter === 0) {\n      this.activeTab = el;\n      el.activate();\n    }\n    this.tabIdCounter++;\n  }\n\n  // called from mdw-tab\n  unregisterTab(el) {\n    // TODO handle if it is active\n  }\n\n  // called from mdw-tabs-content\n  registerContent(el) {\n    this._contentElements.push(el);\n    el.changeTab(this.activeTab.getAttribute('tab-id'));\n  }\n\n  // called from mdw-tabs-content\n  unregisterContent(el) {\n    this._contentElements = this._contentElements.filter(e => e != el);\n  }\n\n  // called from mdw-tab\n  tabClick(el) {\n    const moveX = parseInt(el.getBoundingClientRect().x - this.activeTab.getBoundingClientRect().x);\n    this.activeTab.deactivate(moveX);\n    this.activeTab = el;\n    this.activeTab.activate();\n    this._contentElements.forEach(el => el.changeTab(this.activeTab.getAttribute('tab-id')));\n  }\n\n  get activeTab() {\n    return this._activeTab;\n  }\n\n  set activeTab(el) {\n    this._activeTab = el;\n  }\n\n  cssFile() {\n    return '/src/components/tabs/tabs-bar/internal.css'\n  }\n\n  template() {\n    return html`\n      <mdw-tabs-bar-scroller>\n        <mdw-tabs-bar-scroller-area>\n          <mdw-tabs-bar-scroller-content>\n            <slot></slot>\n          </mdw-tabs-bar-scroller-content>\n        </mdw-tabs-bar-scroller-area>\n      </mdw-tabs-bar-scroller>\n    `;\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-tabs-bar');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/tabs/tabs-bar/index.js?");

/***/ }),

/***/ "./src/components/tabs/tabs-content/external.css":
/*!*******************************************************!*\
  !*** ./src/components/tabs/tabs-content/external.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/tabs/tabs-content/external.css?");

/***/ }),

/***/ "./src/components/tabs/tabs-content/index.js":
/*!***************************************************!*\
  !*** ./src/components/tabs/tabs-content/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-tabs-content');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-tabs-content\", \n      class mdwTabsContent extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this._bodies = [];\n  }\n    \n\n  connectedCallback() {\n    this.tabsBar.registerContent(this);\n  }\n\n  disconnectedCallback() {\n    this.tabsBar && this.tabsBar.unregisterContent(this);\n  }\n\n  get tabsBar() {\n    return document.body.querySelector(`mdw-tabs-bar#${this.getAttribute('tabs-id')}`);\n  }\n\n  registerBody(el) {\n    this._bodies.push(el);\n    if (this._wiatForBodyActiveId  !== undefined && this._bodies.length === this._wiatForBodyActiveId + 1) {\n      this._activeBody = el;\n      el.activate();\n      this._wiatForBodyActiveId = undefined;\n    }\n  }\n\n  unregisterBody(el) {\n    this._bodies = this._bodies.filter(i => i != el);\n  }\n\n  changeTab(tabId) {\n    if (!this._bodies.length) {\n      this._wiatForBodyActiveId = parseInt(tabId);\n      return;\n    }\n    if (this._activeBody) this._activeBody.deactivate();\n    this._activeBody = this._bodies[tabId];\n    this._activeBody.activate();\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-tabs-content');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/tabs/tabs-content/index.js?");

/***/ }),

/***/ "./src/components/text-field/external.css":
/*!************************************************!*\
  !*** ./src/components/text-field/external.css ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/text-field/external.css?");

/***/ }),

/***/ "./src/components/text-field/index.js":
/*!********************************************!*\
  !*** ./src/components/text-field/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-textfield');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-textfield\", \n      class mdwTextfield extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.classList.add('mdw-no-animation');\n    this.bound_onFocus = this.onFocus.bind(this);\n    this.bound_onBlur = this.onBlur.bind(this);\n    this.bound_onInput = this.onInput.bind(this);\n  }\n    \n\n  connectedCallback() {\n    this.compose();\n    this.checkForValue();\n\n    setTimeout(() => {\n      this.classList.remove('mdw-no-animation');\n    }, 0);\n\n    // add listeners\n    this.input.addEventListener('focus', this.bound_onFocus);\n    this.input.addEventListener('blur', this.bound_onBlur);\n    this.input.addEventListener('input', this.bound_onInput);\n  }\n\n  disconnectedCallback() {\n    // remove listeners\n    this.input.removeEventListener('focus', this.bound_onFocus);\n    this.input.removeEventListener('blur', this.bound_onBlur);\n    this.input.removeEventListener('input', this.bound_onInput);\n  }\n\n  compose() {\n    /* For backwards compatability most of the features are built with css and the code is treated as an upgrade\n     *  'mdw-upgraded' lets us know that the code is hooked up\n     */\n    this.classList.add('mdw-upgraded');\n\n    /* textarea css marker\n     *  test area mostly works without wc compatability. The only thing that does not work is some overlapping with the label\n     */\n    if (this.isTextarea()) this.classList.add('mdw-textarea');\n\n    /* Add html for outlined\n     *  outlined does not work without compatability\n     */\n    if (this.outlined) {\n      this.insertAdjacentHTML('beforeend', this.outlinedHTML);\n      this.setNotchWidth();\n    }\n\n    /* Add ripple html if it does not exist\n     */\n    if (!this.querySelector('.mdw-line-ripple')) this.insertAdjacentHTML('beforeend', this.lineRippleHTML);\n\n    /* Fix layout for icons blaced before he input\n     *  This is not handled in non compatable browsers\n     */\n    if (this.isTrailingIcon()) this.classList.add('mdw-trailing-icon');\n  }\n\n  checkForValue() {\n    this.classList.toggle('not-empty', !!this.input.value.length);\n  }\n\n  onFocus() {\n    this.setNotchWidth();\n  }\n\n  onBlur() {\n    this.classList.toggle('not-empty', !!this.input.value.length);\n    this.valid = this.input.validity.valid;\n    this.classList.toggle('invalid', !this.valid);\n  }\n\n  onInput() {\n    if (this.valid !== this.input.validity.valid) {\n      this.valid = this.input.validity.valid;\n      this.classList.toggle('invalid', !this.valid);\n    }\n  }\n\n  setNotchWidth() {\n    if (this.outlined) this.notch.style.width = this.labelWidth + 'px';\n  }\n\n  /* Icons can be places at the begining ro end of a text field\n   * there is some css that is hard to apply when the icon is at the begining, this helps\n   */\n  isTrailingIcon() {\n    if (!this.iconElement) return false;\n    return [...this.children].indexOf(this.iconElement) > 1;\n  }\n\n  isTextarea() {\n    return !!this.querySelector('textarea');\n  }\n\n  get outlined() {\n    return [].slice.apply(this.classList || []).includes('mdw-outlined');\n  }\n\n  get input() {\n    if (!this.inputType_) this.inputType_ = this.querySelector('input') ? 'input' : 'textarea';\n    return this.querySelector(this.inputType_);\n  }\n\n  // this is the section where the labels sits when in outlined mode\n  get notch() {\n    return this.querySelector('.mdw-outlined-notch');\n  }\n\n  get label() {\n    return this.querySelector('label');\n  }\n\n  // figure out a more acurate way or getting the width\n  get labelWidth() {\n    return this.label.offsetWidth * 0.95;\n  }\n\n  get helperTextElement() {\n    return this.querySelector('mdw-textfield-helper');\n  }\n\n  get iconElement() {\n    return this.querySelector('mdw-icon');\n  }\n\n  get outlinedHTML() {\n    return `\n      <div class=\"mdw-outlined-border-container\">\n        <div class=\"mdw-outlined-leading\"></div>\n        <div class=\"mdw-outlined-notch\"></div>\n        <div class=\"mdw-outlined-trailing\"></div>\n      </div>\n    `;\n  }\n\n  get lineRippleHTML() {\n    return '<div class=\"mdw-line-ripple\"></div>';\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-textfield');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/text-field/index.js?");

/***/ }),

/***/ "./src/components/top-app-bar/external.css":
/*!*************************************************!*\
  !*** ./src/components/top-app-bar/external.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/top-app-bar/external.css?");

/***/ }),

/***/ "./src/components/top-app-bar/index.js":
/*!*********************************************!*\
  !*** ./src/components/top-app-bar/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-top-app-bar');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-top-app-bar\", \n      class mdwTopAppBar extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.MAX_TOP_APP_BAR_HEIGHT = 128;\n    this.isCurrentlyBeingResized = false;\n    this.currentAppBarOffsetTop = 0;\n    this.wasDocked = true;\n    this.isDockedShowing = true;\n    this.isCurrentlyBeingResized = false;\n  }\n    \n\n  connectedCallback() {\n    this.scrollTarget = this.getScrollTarget();\n    this.lastScrollPosition = this.getViewportScrollY();\n    this.topAppBarHeight = this.height;\n\n    // add spacer to content area\n    // TODO add another class based on prominent, dense\n    if (this.hasContent && !this.scrollTarget.querySelector('.mdw-top-app-bar')) {\n      const div = document.createElement('div');\n      div.classList.add('mdw-top-app-bar');\n      this.scrollTarget.prepend(div);\n    }\n\n    document.body.classList.add('mdw-top-app-bar');\n\n    this.throttledScrollHandler = MDWUtils.rafThrottle(this.scrollHandler);\n    this.throttledResizeHandler = MDWUtils.rafThrottle(this.resizeHandler);\n    this.scrollTarget.addEventListener('scroll', this.throttledScrollHandler.bind(this));\n    window.addEventListener('resize', this.throttledResizeHandler.bind(this));\n  }\n\n  disconnectedCallback() {\n    this.scrollTarget.removeEventListener('scroll', this.throttledScrollHandler.bind(this));\n    window.removeEventListener('resize', this.throttledResizeHandler.bind(this));\n  }\n\n  get fixed() {\n    return this.classList.contains('mdw-fixed');\n  }\n\n  get height() {\n    return this.clientHeight;\n  }\n\n  getScrollTarget() {\n    if (this.parentNode.nodeName === 'MDW-PAGE') {\n      const content = document.querySelector('mdw-content');\n      if (content) {\n        this.hasContent = true;\n        return content;\n      }\n    }\n    return window;\n  }\n\n  topAppBarScrollHandler() {\n    const currentScrollPosition = Math.max(this.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition;\n    this.lastScrollPosition = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized) {\n      this.currentAppBarOffsetTop -= diff;\n\n      if (this.currentAppBarOffsetTop > 0) {\n        this.currentAppBarOffsetTop = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop) > this.topAppBarHeight) {\n        this.currentAppBarOffsetTop = -this.topAppBarHeight;\n      }\n\n      this.moveTopAppBar();\n    }\n  }\n\n  moveTopAppBar() {\n    if (this.checkForUpdate()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      let offset = this.currentAppBarOffsetTop;\n      if (Math.abs(offset) >= this.topAppBarHeight) {\n        offset = -this.MAX_TOP_APP_BAR_HEIGHT;\n      }\n\n      this.style.top = offset + 'px';\n    }\n  }\n\n  checkForUpdate() {\n    const offscreenBoundaryTop = -this.topAppBarHeight;\n    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop < 0;\n    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop > offscreenBoundaryTop;\n    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked) {\n        this.wasDocked = true;\n        return true;\n      } else if (this.isDockedShowing !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n\n    return partiallyShowing;\n  }\n\n  resizeHandler() {\n    this.isCurrentlyBeingResized = true;\n    const currentHeight = this.height;\n    if (this.topAppBarHeight !== currentHeight) {\n      this.wasDocked = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop -= this.topAppBarHeight - currentHeight;\n      this.topAppBarHeight = currentHeight;\n    }\n    this.topAppBarScrollHandler();\n    this.isCurrentlyBeingResized = false;\n  }\n\n\n  scrollHandler() {\n    const currentScrollPosition = Math.max(this.getViewportScrollY(), 0);\n\n    if (!this.fixed) {\n      const diff = currentScrollPosition - this.lastScrollPosition;\n      this.lastScrollPosition = currentScrollPosition;\n\n      // If the window is being resized the lastScrollPosition_ needs to be updated but the\n      // current scroll of the top app bar should stay in the same position.\n      if (!this.isCurrentlyBeingResized) {\n        this.currentAppBarOffsetTop -= diff;\n\n        if (this.currentAppBarOffsetTop > 0) {\n          this.currentAppBarOffsetTop = 0;\n        } else if (Math.abs(this.currentAppBarOffsetTop) > this.topAppBarHeight) {\n          this.currentAppBarOffsetTop = -this.topAppBarHeight;\n        }\n\n        this.moveTopAppBar();\n      }\n    } else {\n      if (currentScrollPosition <= 0) {\n        if (this.wasScrolled_) {\n          this.classList.remove('mdw-scrolled');\n          this.wasScrolled_ = false;\n        }\n      } else {\n        if (!this.wasScrolled_) {\n          this.classList.add('mdw-scrolled');\n          this.wasScrolled_ = true;\n        }\n      }\n    }\n  }\n\n  getViewportScrollY() {\n    return this.scrollTarget[this.scrollTarget === window ? 'pageYOffset' : 'scrollTop'];\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-top-app-bar');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/top-app-bar/index.js?");

/***/ }),

/***/ "./src/core/Ripple.js":
/*!****************************!*\
  !*** ./src/core/Ripple.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWRipple = class MDWRipple {\n  constructor(config = {}) {\n    this.RIPPLE_FADE_IN_DURATION = 200;\n    this.RIPPLE_FADE_OUT_DURATION = 150;\n    this.RIPPLE_STATE = {\n      FADING_IN: 'FADING_IN',\n      VISIBLE: 'VISIBLE',\n      FADING_OUT: 'FADING_OUT',\n      HIDDEN: 'HIDDEN'\n    };\n\n    if (!config.element) throw Error('requires config.element');\n    if (!config.triggerElement) throw Error('requires config.triggerElement');\n\n    this.element = config.element;\n    this.triggerElement = [].concat(config.triggerElement).filter(el => !!el);\n    this.centered = !!config.centered;\n    this.speedFactor = config.speedFactor || 1;\n    this.radius = config.radius;\n    this.color = config.color || null;\n    this.persistent = !!config.persistent;\n    this.activeRipples = new Set();\n    this.isMousedown = false;\n    this.bound_mousesdown_ = this.mousesdown_.bind(this);\n    this.bound_mouseup_ = this.mouseup_.bind(this);\n    this.bound_mouseleave_ = this.mouseleave_.bind(this);\n\n    this.triggerElement.forEach(el => {\n      el.addEventListener('mousedown', this.bound_mousesdown_);\n    });\n  }\n\n  destroy() {\n    this.triggerElement.forEach(el => {\n      el.removeEventListener('mousedown', this.bound_mousesdown_);\n    });\n  }\n\n  mousesdown_(event) {\n    this.isMousedown = true;\n    this.triggerElement.forEach(el => {\n      el.addEventListener('mouseup', this.bound_mouseup_);\n      el.addEventListener('mouseleave', this.bound_mouseleave_);\n    });\n    this.fadeInRipple(event.pageX, event.pageY);\n  }\n\n  mouseup_(event) {\n    this.isMousedown = false;\n    // Fade-out all ripples that are completely visible and not persistent.\n    this.activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === this.RIPPLE_STATE.VISIBLE) ripple.fadeOut();\n    });\n    this.triggerElement.forEach(el => {\n      el.removeEventListener('mouseup', this.bound_mouseup_);\n      el.removeEventListener('mouseleave', this.bound_mouseleave_);\n    });\n  }\n\n  mouseleave_() {\n    if (this.isMousedown) this.mouseup_();\n  }\n\n\n  fadeInRipple(pageX, pageY) {\n    const containerRect = this.element.getBoundingClientRect();\n\n    if (this.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      const scrollPosition = this.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    const radius = this.radius || this.distanceToFurthestCorner(pageX, pageY, containerRect);\n    const duration = this.RIPPLE_FADE_IN_DURATION * (1 / this.speedFactor);\n    const offsetX = pageX - containerRect.left;\n    const offsetY = pageY - containerRect.top;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mdw-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = this.color;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this.element.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    this.enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let rippleRef = {\n      config: {\n        centered: this.centered,\n        tiggerElement: this.triggerElement,\n        speedFactor: this.speedFactor,\n        radius: radius,\n        color: this.color,\n        persistent: this.persistent,\n        duration: duration\n      },\n      element: ripple,\n      fadeOut: () => fadeOut(),\n      state: this.RIPPLE_STATE.FADING_IN\n    };\n    const fadeOut = () => {\n      this.fadeOutRipple(rippleRef)\n    };\n\n    // Add the ripple reference to the list of all active ripples.\n    this.activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    setTimeout(() => {\n      rippleRef.state = this.RIPPLE_STATE.VISIBLE;\n      if (!this.persistent && !this.isMousedown) rippleRef.fadeOut();\n    }, duration);\n  }\n\n  fadeOutRipple(rippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this.activeRipples.delete(rippleRef)) return;\n\n    const rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${this.RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = this.RIPPLE_STATE.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    setTimeout(() => {\n      rippleRef.state = this.RIPPLE_STATE.HIDDEN;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, this.RIPPLE_FADE_OUT_DURATION);\n  }\n\n  distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n  }\n\n  getViewportScrollPosition() {\n    const documentRect = document.documentElement.getBoundingClientRect();\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY || document.documentElement.scrollTop || 0;\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX || document.documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /** Enforces a style recalculation of a DOM element by computing its styles. */\n  // TODO(devversion): Move into global utility function.\n  enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n  }\n};\n\n\n//# sourceURL=webpack:///./src/core/Ripple.js?");

/***/ }),

/***/ "./src/core/Theme.js":
/*!***************************!*\
  !*** ./src/core/Theme.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWTheme = new class MDWTheme {\n  constructor() {\n    this.hexREGEX = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    this.setContrast();\n    this.setPalettes();\n    this.configureVars();\n  }\n\n  setPalettes({ primary, secondary, error } = {}) {\n    this.palettes = {\n      primary: primary || 'deep-purple',\n      secondary: secondary || 'teal',\n      error: error || 'red'\n    };\n  }\n\n  setContrast(contrast = 'light') {\n    this.contrast = contrast;\n  }\n\n  configureVars() {\n    this.setTheme();\n    this.createRGBValues();\n    this.applyContrast();\n    this.createBaseVars();\n  }\n\n  setTheme() {\n    Object.keys(this.palettes).forEach(key => {\n      const colorName = this.palettes[key];\n      this.paletteVars(colorName).forEach(varName => {\n        this.setVar(varName.replace(colorName, key), this.getVar(varName));\n      });\n    });\n  }\n\n  createRGBValues() {\n    this.rgbConversionList().forEach(name => {\n      this.setVar(`${name.replace(`--default`, '')}--rgb`, this.convertToRGB(this.getVar(name)));\n    });\n  }\n\n  applyContrast() {\n    this.contrastList(this.contrast).forEach(name => {\n      this.setVar(name.replace(`--${this.contrast}`, ''), this.getVar(name));\n    });\n  }\n\n  // this will take any var with --default and create a var without default in it\n  // example: --mdw-theme-primary--default -> --mdw-theme-primary\n  createBaseVars() {\n    this.defaultList().forEach(name => {\n      this.setVar(name.replace(`--default`, ''), this.getVar(name));\n    });\n  }\n\n  convertToRGB(hex) {\n    const result = this.hexREGEX.exec(hex.trim());\n    return result ? `${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}` : null;\n  }\n\n  getVar(name) {\n    return getComputedStyle(document.documentElement).getPropertyValue(name);\n  }\n\n  getAllVars() {\n    return getComputedStyle(document.documentElement);\n  }\n\n  setVar(name, value) {\n    document.documentElement.style.setProperty(name, value);\n  }\n\n  defaultList() {\n    return this.rgbConversionList();\n  }\n\n  rgbConversionList() {\n    return [\n      '--mdw-theme-primary--default',\n      '--mdw-theme-secondary--default',\n      '--mdw-theme-error--default',\n      '--mdw-theme-surface--default',\n      '--mdw-theme-background--default',\n      '--mdw-theme-foreground--default'\n    ];\n  }\n\n  contrastList(contrast) {\n    return [\n      `--mdw-theme-primary--${contrast}--on`,\n      `--mdw-theme-secondary--${contrast}--on`,\n      `--mdw-theme-error--${contrast}--on`,\n      `--mdw-theme-surface--${contrast}--on`,\n      `--mdw-theme-text--primary--${contrast}`,\n      `--mdw-theme-text--secondary--${contrast}`,\n      `--mdw-theme-text--hint--${contrast}`,\n      `--mdw-theme-text--disabled--${contrast}`,\n      `--mdw-theme-text--icon--${contrast}`,\n      `--mdw-theme-divider--${contrast}`,\n      `--mdw-theme-divider--on--${contrast}`,\n      `--mdw-theme-text--primary--on-${contrast}`,\n      `--mdw-theme-text--secondary--on-${contrast}`,\n      `--mdw-theme-text--hint--on-${contrast}`,\n      `--mdw-theme-text--disabled--on-${contrast}`,\n      `--mdw-theme-text--icon--on-${contrast}`\n    ];\n  }\n\n  paletteVars(name) {\n    return [\n        `--mdw-theme-palette--${name}-50`,\n        `--mdw-theme-palette--${name}-100`,\n        `--mdw-theme-palette--${name}-200`,\n        `--mdw-theme-palette--${name}-300`,\n        `--mdw-theme-palette--${name}-400`,\n        `--mdw-theme-palette--${name}-500`,\n        `--mdw-theme-palette--${name}-600`,\n        `--mdw-theme-palette--${name}-700`,\n        `--mdw-theme-palette--${name}-800`,\n        `--mdw-theme-palette--${name}-900`,\n        `--mdw-theme-palette--${name}-A100`,\n        `--mdw-theme-palette--${name}-A200`,\n        `--mdw-theme-palette--${name}-A400`,\n        `--mdw-theme-palette--${name}-A700`,\n        `--mdw-theme-palette--${name}-contrast-50`,\n        `--mdw-theme-palette--${name}-contrast-100`,\n        `--mdw-theme-palette--${name}-contrast-200`,\n        `--mdw-theme-palette--${name}-contrast-300`,\n        `--mdw-theme-palette--${name}-contrast-400`,\n        `--mdw-theme-palette--${name}-contrast-500`,\n        `--mdw-theme-palette--${name}-contrast-600`,\n        `--mdw-theme-palette--${name}-contrast-700`,\n        `--mdw-theme-palette--${name}-contrast-800`,\n        `--mdw-theme-palette--${name}-contrast-900`,\n        `--mdw-theme-palette--${name}-contrast-A100`,\n        `--mdw-theme-palette--${name}-contrast-A200`,\n        `--mdw-theme-palette--${name}-contrast-A400`,\n        `--mdw-theme-palette--${name}-contrast-A700`\n    ];\n  }\n}\n\n\n//# sourceURL=webpack:///./src/core/Theme.js?");

/***/ }),

/***/ "./src/core/Utils.js":
/*!***************************!*\
  !*** ./src/core/Utils.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWUtils = new class MDWUtils {\n  constructor() {\n    this._uid = 1;\n    this._setupTransitionEvent();\n    this._setTransformPropertyName();\n  }\n\n  uid() {\n    return `id_${this._uid++}`;\n  }\n\n  debounce(fn, wait) {\n    let timer;\n    return function debounced() {\n      const args = arguments;\n      const context = this\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        timer = undefined;\n        fn.apply(context, args);\n      }, wait || 10);\n    };\n  }\n\n  throttle(fn, limit) {\n    let alreadyQueued;\n    return function throttled() {\n      const args = arguments;\n      const context = this;\n      if (!alreadyQueued) {\n        alreadyQueued = true;\n        fn.apply(context, args);\n        setTimeout(() => {\n          alreadyQueued = false;\n        }, limit);\n      }\n    };\n  }\n\n  // throttle on request animation frameyy\n  rafThrottle(fn) {\n    let alreadyQueued;\n    return function throttled() {\n      const args = arguments;\n      const context = this;\n      if (!alreadyQueued) {\n        alreadyQueued = true;\n        fn.apply(context, args);\n        requestAnimationFrame(() => {\n          alreadyQueued = false;\n        });\n      }\n    };\n  }\n\n  get transitionEventName() {\n    return this.transitionEventName_;\n  }\n\n  get transformPropertyName() {\n    return this.transformPropertyName_;\n  }\n\n  _setupTransitionEvent() {\n    const el = document.createElement('fakeelement');\n    const transitions = {\n      transition: 'transitionend',\n      OTransition: 'oTransitionEnd',\n      MozTransition: 'transitionend',\n      WebkitTransition: 'webkitTransitionEnd'\n    };\n\n    for (let t in transitions){\n      if (el.style[t] !== undefined) this.transitionEventName_ = transitions[t];\n    }\n  }\n\n  _setTransformPropertyName(forceRefresh = false) {\n    if (this.transformPropertyName_ === undefined || forceRefresh) {\n      const el = document.createElement('div');\n      this.transformPropertyName_ = 'transform' in el.style ? 'transform' : 'webkitTransform';\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/core/Utils.js?");

/***/ }),

/***/ "./src/core/animation-vars.css":
/*!*************************************!*\
  !*** ./src/core/animation-vars.css ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/animation-vars.css?");

/***/ }),

/***/ "./src/core/base-theme.css":
/*!*********************************!*\
  !*** ./src/core/base-theme.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/base-theme.css?");

/***/ }),

/***/ "./src/core/core.css":
/*!***************************!*\
  !*** ./src/core/core.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/core.css?");

/***/ }),

/***/ "./src/core/elevation.css":
/*!********************************!*\
  !*** ./src/core/elevation.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/elevation.css?");

/***/ }),

/***/ "./src/core/layout.css":
/*!*****************************!*\
  !*** ./src/core/layout.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/layout.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// css var files\n__webpack_require__(/*! ./core/base-theme.css */ \"./src/core/base-theme.css\");\n__webpack_require__(/*! ./core/animation-vars.css */ \"./src/core/animation-vars.css\");\n\n// css\n__webpack_require__(/*! ./core/core.css */ \"./src/core/core.css\");\n__webpack_require__(/*! ./core/layout.css */ \"./src/core/layout.css\");\n__webpack_require__(/*! ./core/elevation.css */ \"./src/core/elevation.css\");\n__webpack_require__(/*! ./components/text-field/external.css */ \"./src/components/text-field/external.css\");\n// require('./components/expander/external.css');\n__webpack_require__(/*! ./components/divider/external.css */ \"./src/components/divider/external.css\");\n__webpack_require__(/*! ./components/top-app-bar/external.css */ \"./src/components/top-app-bar/external.css\");\n__webpack_require__(/*! ./components/drawer/external.css */ \"./src/components/drawer/external.css\");\n__webpack_require__(/*! ./components/body/external.css */ \"./src/components/body/external.css\");\n__webpack_require__(/*! ./components/page/external.css */ \"./src/components/page/external.css\");\n__webpack_require__(/*! ./components/content/external.css */ \"./src/components/content/external.css\");\n__webpack_require__(/*! ./components/banner/external.css */ \"./src/components/banner/external.css\");\n__webpack_require__(/*! ./components/card/external.css */ \"./src/components/card/external.css\");\n__webpack_require__(/*! ./components/media/external.css */ \"./src/components/media/external.css\");\n__webpack_require__(/*! ./components/panel/external.css */ \"./src/components/panel/external.css\");\n__webpack_require__(/*! ./components/select/external.css */ \"./src/components/select/external.css\");\n__webpack_require__(/*! ./components/button/external.css */ \"./src/components/button/external.css\");\n__webpack_require__(/*! ./components/fab/external.css */ \"./src/components/fab/external.css\");\n__webpack_require__(/*! ./components/list/external.css */ \"./src/components/list/external.css\");\n__webpack_require__(/*! ./components/list-item/external.css */ \"./src/components/list-item/external.css\");\n__webpack_require__(/*! ./components/backdrop/external.css */ \"./src/components/backdrop/external.css\");\n__webpack_require__(/*! ./components/checkbox/external.css */ \"./src/components/checkbox/external.css\");\n__webpack_require__(/*! ./components/icon/external.css */ \"./src/components/icon/external.css\");\n__webpack_require__(/*! ./components/dialog/external.css */ \"./src/components/dialog/external.css\");\n__webpack_require__(/*! ./components/switch/external.css */ \"./src/components/switch/external.css\");\n__webpack_require__(/*! ./components/radio/external.css */ \"./src/components/radio/external.css\");\n__webpack_require__(/*! ./components/slider/external.css */ \"./src/components/slider/external.css\");\n__webpack_require__(/*! ./components/snackbar/external.css */ \"./src/components/snackbar/external.css\");\n__webpack_require__(/*! ./components/tabs/tabs-bar/external.css */ \"./src/components/tabs/tabs-bar/external.css\");\n__webpack_require__(/*! ./components/tabs/tab-button/external.css */ \"./src/components/tabs/tab-button/external.css\");\n__webpack_require__(/*! ./components/tabs/tabs-content/external.css */ \"./src/components/tabs/tabs-content/external.css\");\n__webpack_require__(/*! ./components/tabs/tab-body/external.css */ \"./src/components/tabs/tab-body/external.css\");\n__webpack_require__(/*! ./components/autocomplete/external.css */ \"./src/components/autocomplete/external.css\");\n\n// core\n__webpack_require__(/*! ./core/Ripple */ \"./src/core/Ripple.js\");\n__webpack_require__(/*! ./core/Theme */ \"./src/core/Theme.js\");\n__webpack_require__(/*! ./core/Utils */ \"./src/core/Utils.js\");\n\n// component services\n__webpack_require__(/*! ./components/banner/service */ \"./src/components/banner/service.js\")\n__webpack_require__(/*! ./components/dialog/service */ \"./src/components/dialog/service.js\")\n__webpack_require__(/*! ./components/snackbar/service */ \"./src/components/snackbar/service.js\")\n\n// components\n__webpack_require__(/*! ./components/button */ \"./src/components/button/index.js\");\n__webpack_require__(/*! ./components/fab */ \"./src/components/fab/index.js\");\n__webpack_require__(/*! ./components/checkbox */ \"./src/components/checkbox/index.js\");\n__webpack_require__(/*! ./components/text-field */ \"./src/components/text-field/index.js\");\n__webpack_require__(/*! ./components/linear-progress */ \"./src/components/linear-progress/index.js\");\n__webpack_require__(/*! ./components/circular-progress */ \"./src/components/circular-progress/index.js\");\n// require('./components/expander/expander-container');\n// require('./components/expander/expander-header');\n// require('./components/expander/expander-content');\n// require('./components/expander/expander-arrow');\n__webpack_require__(/*! ./components/top-app-bar */ \"./src/components/top-app-bar/index.js\");\n__webpack_require__(/*! ./components/drawer */ \"./src/components/drawer/index.js\");\n__webpack_require__(/*! ./components/banner */ \"./src/components/banner/index.js\");\n__webpack_require__(/*! ./components/card */ \"./src/components/card/index.js\");\n__webpack_require__(/*! ./components/panel */ \"./src/components/panel/index.js\");\n__webpack_require__(/*! ./components/menu */ \"./src/components/menu/index.js\");\n__webpack_require__(/*! ./components/select */ \"./src/components/select/index.js\");\n__webpack_require__(/*! ./components/list */ \"./src/components/list/index.js\");\n__webpack_require__(/*! ./components/list-item */ \"./src/components/list-item/index.js\");\n__webpack_require__(/*! ./components/backdrop */ \"./src/components/backdrop/index.js\");\n__webpack_require__(/*! ./components/dialog */ \"./src/components/dialog/index.js\");\n__webpack_require__(/*! ./components/switch */ \"./src/components/switch/index.js\");\n__webpack_require__(/*! ./components/radio */ \"./src/components/radio/index.js\");\n__webpack_require__(/*! ./components/radio-group */ \"./src/components/radio-group/index.js\");\n__webpack_require__(/*! ./components/slider */ \"./src/components/slider/index.js\");\n__webpack_require__(/*! ./components/snackbar */ \"./src/components/snackbar/index.js\");\n__webpack_require__(/*! ./components/tabs/tabs-bar */ \"./src/components/tabs/tabs-bar/index.js\");\n__webpack_require__(/*! ./components/tabs/tab-button */ \"./src/components/tabs/tab-button/index.js\");\n__webpack_require__(/*! ./components/tabs/tabs-content */ \"./src/components/tabs/tabs-content/index.js\");\n__webpack_require__(/*! ./components/tabs/tab-body */ \"./src/components/tabs/tab-body/index.js\");\n__webpack_require__(/*! ./components/autocomplete */ \"./src/components/autocomplete/index.js\");\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });